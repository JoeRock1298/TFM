// (c) 1992-2021 Intel Corporation.                            
// Intel, the Intel logo, Intel, MegaCore, NIOS II, Quartus and TalkBack words    
// and logos are trademarks of Intel Corporation or its subsidiaries in the U.S.  
// and/or other countries. Other marks and brands may be claimed as the property  
// of others. See Trademarks on intel.com for full list of Intel trademarks or    
// the Trademarks & Brands Names Database (if Intel) or See www.Intel.com/legal (if Altera) 
// Your use of Intel Corporation's design tools, logic functions and other        
// software and tools, and its AMPP partner logic functions, and any output       
// files any of the foregoing (including device programming or simulation         
// files), and any associated documentation or information are expressly subject  
// to the terms and conditions of the Altera Program License Subscription         
// Agreement, Intel MegaCore Function License Agreement, or other applicable      
// license agreement, including, without limitation, that your use is for the     
// sole purpose of programming logic devices manufactured by Intel and sold by    
// Intel or its authorized distributors.  Please refer to the applicable          
// agreement for further details.                                                 
// Generated by Intel(R) FPGA SDK for OpenCL(TM), Version 21.1.0 Build 173.3 Pro Edition, Copyright (c) 2021 Intel Corporation

/////////////////////////////////////////////////////////////////
// MODULE squeezenet_NDRange_sys
/////////////////////////////////////////////////////////////////
module squeezenet_NDRange_sys
(
   input logic clock,
   input logic clock2x,
   input logic resetn,
   output logic [63:0] device_exception_bus,
   output logic kernel_irq,
   // AVM avm_mem_gmem_0_DDR_port_0_0_rw
   output logic avm_mem_gmem_0_DDR_port_0_0_rw_enable,
   output logic avm_mem_gmem_0_DDR_port_0_0_rw_read,
   output logic avm_mem_gmem_0_DDR_port_0_0_rw_write,
   output logic [30:0] avm_mem_gmem_0_DDR_port_0_0_rw_address,
   output logic [511:0] avm_mem_gmem_0_DDR_port_0_0_rw_writedata,
   output logic [63:0] avm_mem_gmem_0_DDR_port_0_0_rw_byteenable,
   input logic avm_mem_gmem_0_DDR_port_0_0_rw_waitrequest,
   input logic [511:0] avm_mem_gmem_0_DDR_port_0_0_rw_readdata,
   input logic avm_mem_gmem_0_DDR_port_0_0_rw_readdatavalid,
   output logic [4:0] avm_mem_gmem_0_DDR_port_0_0_rw_burstcount,
   input logic avm_mem_gmem_0_DDR_port_0_0_rw_writeack,
   // AVS cra_ring_root_avs
   input logic cra_ring_root_avs_enable,
   input logic cra_ring_root_avs_read,
   input logic cra_ring_root_avs_write,
   input logic [7:0] cra_ring_root_avs_address,
   input logic [63:0] cra_ring_root_avs_writedata,
   input logic [7:0] cra_ring_root_avs_byteenable,
   output logic cra_ring_root_avs_waitrequest,
   output logic [63:0] cra_ring_root_avs_readdata,
   output logic cra_ring_root_avs_readdatavalid
);
   logic cra_ring_node_avm_wire_0_enable;
   logic cra_ring_node_avm_wire_0_read;
   logic cra_ring_node_avm_wire_0_write;
   logic [4:0] cra_ring_node_avm_wire_0_address;
   logic [63:0] cra_ring_node_avm_wire_0_writedata;
   logic [7:0] cra_ring_node_avm_wire_0_byteenable;
   logic [63:0] cra_ring_node_avm_wire_0_readdata;
   logic cra_ring_node_avm_wire_0_readdatavalid;
   logic cra_ring_node_avm_wire_0_burstcount;
   logic cra_ring_node_avm_wire_1_enable;
   logic cra_ring_node_avm_wire_1_read;
   logic cra_ring_node_avm_wire_1_write;
   logic [4:0] cra_ring_node_avm_wire_1_address;
   logic [63:0] cra_ring_node_avm_wire_1_writedata;
   logic [7:0] cra_ring_node_avm_wire_1_byteenable;
   logic [63:0] cra_ring_node_avm_wire_1_readdata;
   logic cra_ring_node_avm_wire_1_readdatavalid;
   logic cra_ring_node_avm_wire_1_burstcount;
   logic cra_ring_node_avm_wire_2_enable;
   logic cra_ring_node_avm_wire_2_read;
   logic cra_ring_node_avm_wire_2_write;
   logic [4:0] cra_ring_node_avm_wire_2_address;
   logic [63:0] cra_ring_node_avm_wire_2_writedata;
   logic [7:0] cra_ring_node_avm_wire_2_byteenable;
   logic [63:0] cra_ring_node_avm_wire_2_readdata;
   logic cra_ring_node_avm_wire_2_readdatavalid;
   logic cra_ring_node_avm_wire_2_burstcount;
   logic cra_ring_node_avm_wire_3_enable;
   logic cra_ring_node_avm_wire_3_read;
   logic cra_ring_node_avm_wire_3_write;
   logic [4:0] cra_ring_node_avm_wire_3_address;
   logic [63:0] cra_ring_node_avm_wire_3_writedata;
   logic [7:0] cra_ring_node_avm_wire_3_byteenable;
   logic [63:0] cra_ring_node_avm_wire_3_readdata;
   logic cra_ring_node_avm_wire_3_readdatavalid;
   logic cra_ring_node_avm_wire_3_burstcount;
   logic [3:0] kernel_irqs;
   logic gmem_avm_kernel_rd_enable [15];
   logic gmem_avm_kernel_rd_read [15];
   logic gmem_avm_kernel_rd_write [15];
   logic [30:0] gmem_avm_kernel_rd_address [15];
   logic [511:0] gmem_avm_kernel_rd_writedata [15];
   logic [63:0] gmem_avm_kernel_rd_byteenable [15];
   logic gmem_avm_kernel_rd_waitrequest [15];
   logic [511:0] gmem_avm_kernel_rd_readdata [15];
   logic gmem_avm_kernel_rd_readdatavalid [15];
   logic [4:0] gmem_avm_kernel_rd_burstcount [15];
   logic gmem_avm_kernel_rd_writeack [15];
   logic gmem_avm_kernel_wr_enable [4];
   logic gmem_avm_kernel_wr_read [4];
   logic gmem_avm_kernel_wr_write [4];
   logic [30:0] gmem_avm_kernel_wr_address [4];
   logic [511:0] gmem_avm_kernel_wr_writedata [4];
   logic [63:0] gmem_avm_kernel_wr_byteenable [4];
   logic gmem_avm_kernel_wr_waitrequest [4];
   logic [511:0] gmem_avm_kernel_wr_readdata [4];
   logic gmem_avm_kernel_wr_readdatavalid [4];
   logic [4:0] gmem_avm_kernel_wr_burstcount [4];
   logic gmem_avm_kernel_wr_writeack [4];
   logic gmem_ic_avm_enable [1];
   logic gmem_ic_avm_read [1];
   logic gmem_ic_avm_write [1];
   logic [30:0] gmem_ic_avm_address [1];
   logic [511:0] gmem_ic_avm_writedata [1];
   logic [63:0] gmem_ic_avm_byteenable [1];
   logic gmem_ic_avm_waitrequest [1];
   logic [511:0] gmem_ic_avm_readdata [1];
   logic gmem_ic_avm_readdatavalid [1];
   logic [4:0] gmem_ic_avm_burstcount [1];
   logic gmem_ic_avm_writeack [1];

   // INST avgpool2d_std_ic_inst of avgpool2d_std_ic_partition_wrapper
   avgpool2d_std_ic_partition_wrapper avgpool2d_std_ic_inst
   (
      .clock(clock),
      .clock2x(clock2x),
      .resetn(resetn),
      .cra_irq_avgpool2d(kernel_irqs[0]),
      // AVS avs_avgpool2d_cra
      .avs_avgpool2d_cra_enable(cra_ring_node_avm_wire_0_enable),
      .avs_avgpool2d_cra_read(cra_ring_node_avm_wire_0_read),
      .avs_avgpool2d_cra_write(cra_ring_node_avm_wire_0_write),
      .avs_avgpool2d_cra_address(cra_ring_node_avm_wire_0_address),
      .avs_avgpool2d_cra_writedata(cra_ring_node_avm_wire_0_writedata),
      .avs_avgpool2d_cra_byteenable(cra_ring_node_avm_wire_0_byteenable),
      .avs_avgpool2d_cra_readdata(cra_ring_node_avm_wire_0_readdata),
      .avs_avgpool2d_cra_readdatavalid(cra_ring_node_avm_wire_0_readdatavalid),
      // AVM avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d
      .avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_enable(gmem_avm_kernel_wr_enable[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_read(gmem_avm_kernel_wr_read[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_write(gmem_avm_kernel_wr_write[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_address(gmem_avm_kernel_wr_address[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_writedata(gmem_avm_kernel_wr_writedata[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_byteenable(gmem_avm_kernel_wr_byteenable[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_waitrequest(gmem_avm_kernel_wr_waitrequest[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_readdata(gmem_avm_kernel_wr_readdata[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_readdatavalid(gmem_avm_kernel_wr_readdatavalid[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_burstcount(gmem_avm_kernel_wr_burstcount[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_writeack(gmem_avm_kernel_wr_writeack[0]),
      // AVM avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d
      .avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_enable(gmem_avm_kernel_rd_enable[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_read(gmem_avm_kernel_rd_read[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_write(gmem_avm_kernel_rd_write[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_address(gmem_avm_kernel_rd_address[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_writedata(gmem_avm_kernel_rd_writedata[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_byteenable(gmem_avm_kernel_rd_byteenable[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_waitrequest(gmem_avm_kernel_rd_waitrequest[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_readdata(gmem_avm_kernel_rd_readdata[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_readdatavalid(gmem_avm_kernel_rd_readdatavalid[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_burstcount(gmem_avm_kernel_rd_burstcount[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_writeack(gmem_avm_kernel_rd_writeack[0])
   );

   // INST conv2d1x1_std_ic_inst of conv2d1x1_std_ic_partition_wrapper
   conv2d1x1_std_ic_partition_wrapper conv2d1x1_std_ic_inst
   (
      .clock(clock),
      .clock2x(clock2x),
      .resetn(resetn),
      .cra_irq_conv2d1x1(kernel_irqs[1]),
      // AVS avs_conv2d1x1_cra
      .avs_conv2d1x1_cra_enable(cra_ring_node_avm_wire_1_enable),
      .avs_conv2d1x1_cra_read(cra_ring_node_avm_wire_1_read),
      .avs_conv2d1x1_cra_write(cra_ring_node_avm_wire_1_write),
      .avs_conv2d1x1_cra_address(cra_ring_node_avm_wire_1_address),
      .avs_conv2d1x1_cra_writedata(cra_ring_node_avm_wire_1_writedata),
      .avs_conv2d1x1_cra_byteenable(cra_ring_node_avm_wire_1_byteenable),
      .avs_conv2d1x1_cra_readdata(cra_ring_node_avm_wire_1_readdata),
      .avs_conv2d1x1_cra_readdatavalid(cra_ring_node_avm_wire_1_readdatavalid),
      // AVM conv2d1x1_0_avm_lm11_conv2d1x1
      .conv2d1x1_0_avm_lm11_conv2d1x1_enable(gmem_avm_kernel_rd_enable[1]),
      .conv2d1x1_0_avm_lm11_conv2d1x1_read(gmem_avm_kernel_rd_read[1]),
      .conv2d1x1_0_avm_lm11_conv2d1x1_write(gmem_avm_kernel_rd_write[1]),
      .conv2d1x1_0_avm_lm11_conv2d1x1_address(gmem_avm_kernel_rd_address[1]),
      .conv2d1x1_0_avm_lm11_conv2d1x1_writedata(gmem_avm_kernel_rd_writedata[1]),
      .conv2d1x1_0_avm_lm11_conv2d1x1_byteenable(gmem_avm_kernel_rd_byteenable[1]),
      .conv2d1x1_0_avm_lm11_conv2d1x1_waitrequest(gmem_avm_kernel_rd_waitrequest[1]),
      .conv2d1x1_0_avm_lm11_conv2d1x1_readdata(gmem_avm_kernel_rd_readdata[1]),
      .conv2d1x1_0_avm_lm11_conv2d1x1_readdatavalid(gmem_avm_kernel_rd_readdatavalid[1]),
      .conv2d1x1_0_avm_lm11_conv2d1x1_burstcount(gmem_avm_kernel_rd_burstcount[1]),
      .conv2d1x1_0_avm_lm11_conv2d1x1_writeack(gmem_avm_kernel_rd_writeack[1]),
      // AVM conv2d1x1_0_avm_lm12_conv2d1x1
      .conv2d1x1_0_avm_lm12_conv2d1x1_enable(gmem_avm_kernel_rd_enable[2]),
      .conv2d1x1_0_avm_lm12_conv2d1x1_read(gmem_avm_kernel_rd_read[2]),
      .conv2d1x1_0_avm_lm12_conv2d1x1_write(gmem_avm_kernel_rd_write[2]),
      .conv2d1x1_0_avm_lm12_conv2d1x1_address(gmem_avm_kernel_rd_address[2]),
      .conv2d1x1_0_avm_lm12_conv2d1x1_writedata(gmem_avm_kernel_rd_writedata[2]),
      .conv2d1x1_0_avm_lm12_conv2d1x1_byteenable(gmem_avm_kernel_rd_byteenable[2]),
      .conv2d1x1_0_avm_lm12_conv2d1x1_waitrequest(gmem_avm_kernel_rd_waitrequest[2]),
      .conv2d1x1_0_avm_lm12_conv2d1x1_readdata(gmem_avm_kernel_rd_readdata[2]),
      .conv2d1x1_0_avm_lm12_conv2d1x1_readdatavalid(gmem_avm_kernel_rd_readdatavalid[2]),
      .conv2d1x1_0_avm_lm12_conv2d1x1_burstcount(gmem_avm_kernel_rd_burstcount[2]),
      .conv2d1x1_0_avm_lm12_conv2d1x1_writeack(gmem_avm_kernel_rd_writeack[2]),
      // AVM conv2d1x1_0_avm_lm14_conv2d1x1
      .conv2d1x1_0_avm_lm14_conv2d1x1_enable(gmem_avm_kernel_rd_enable[3]),
      .conv2d1x1_0_avm_lm14_conv2d1x1_read(gmem_avm_kernel_rd_read[3]),
      .conv2d1x1_0_avm_lm14_conv2d1x1_write(gmem_avm_kernel_rd_write[3]),
      .conv2d1x1_0_avm_lm14_conv2d1x1_address(gmem_avm_kernel_rd_address[3]),
      .conv2d1x1_0_avm_lm14_conv2d1x1_writedata(gmem_avm_kernel_rd_writedata[3]),
      .conv2d1x1_0_avm_lm14_conv2d1x1_byteenable(gmem_avm_kernel_rd_byteenable[3]),
      .conv2d1x1_0_avm_lm14_conv2d1x1_waitrequest(gmem_avm_kernel_rd_waitrequest[3]),
      .conv2d1x1_0_avm_lm14_conv2d1x1_readdata(gmem_avm_kernel_rd_readdata[3]),
      .conv2d1x1_0_avm_lm14_conv2d1x1_readdatavalid(gmem_avm_kernel_rd_readdatavalid[3]),
      .conv2d1x1_0_avm_lm14_conv2d1x1_burstcount(gmem_avm_kernel_rd_burstcount[3]),
      .conv2d1x1_0_avm_lm14_conv2d1x1_writeack(gmem_avm_kernel_rd_writeack[3]),
      // AVM conv2d1x1_0_avm_lm16_conv2d1x1
      .conv2d1x1_0_avm_lm16_conv2d1x1_enable(gmem_avm_kernel_rd_enable[4]),
      .conv2d1x1_0_avm_lm16_conv2d1x1_read(gmem_avm_kernel_rd_read[4]),
      .conv2d1x1_0_avm_lm16_conv2d1x1_write(gmem_avm_kernel_rd_write[4]),
      .conv2d1x1_0_avm_lm16_conv2d1x1_address(gmem_avm_kernel_rd_address[4]),
      .conv2d1x1_0_avm_lm16_conv2d1x1_writedata(gmem_avm_kernel_rd_writedata[4]),
      .conv2d1x1_0_avm_lm16_conv2d1x1_byteenable(gmem_avm_kernel_rd_byteenable[4]),
      .conv2d1x1_0_avm_lm16_conv2d1x1_waitrequest(gmem_avm_kernel_rd_waitrequest[4]),
      .conv2d1x1_0_avm_lm16_conv2d1x1_readdata(gmem_avm_kernel_rd_readdata[4]),
      .conv2d1x1_0_avm_lm16_conv2d1x1_readdatavalid(gmem_avm_kernel_rd_readdatavalid[4]),
      .conv2d1x1_0_avm_lm16_conv2d1x1_burstcount(gmem_avm_kernel_rd_burstcount[4]),
      .conv2d1x1_0_avm_lm16_conv2d1x1_writeack(gmem_avm_kernel_rd_writeack[4]),
      // AVM conv2d1x1_0_avm_lm_conv2d1x1
      .conv2d1x1_0_avm_lm_conv2d1x1_enable(gmem_avm_kernel_rd_enable[5]),
      .conv2d1x1_0_avm_lm_conv2d1x1_read(gmem_avm_kernel_rd_read[5]),
      .conv2d1x1_0_avm_lm_conv2d1x1_write(gmem_avm_kernel_rd_write[5]),
      .conv2d1x1_0_avm_lm_conv2d1x1_address(gmem_avm_kernel_rd_address[5]),
      .conv2d1x1_0_avm_lm_conv2d1x1_writedata(gmem_avm_kernel_rd_writedata[5]),
      .conv2d1x1_0_avm_lm_conv2d1x1_byteenable(gmem_avm_kernel_rd_byteenable[5]),
      .conv2d1x1_0_avm_lm_conv2d1x1_waitrequest(gmem_avm_kernel_rd_waitrequest[5]),
      .conv2d1x1_0_avm_lm_conv2d1x1_readdata(gmem_avm_kernel_rd_readdata[5]),
      .conv2d1x1_0_avm_lm_conv2d1x1_readdatavalid(gmem_avm_kernel_rd_readdatavalid[5]),
      .conv2d1x1_0_avm_lm_conv2d1x1_burstcount(gmem_avm_kernel_rd_burstcount[5]),
      .conv2d1x1_0_avm_lm_conv2d1x1_writeack(gmem_avm_kernel_rd_writeack[5]),
      // AVM conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1
      .conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_enable(gmem_avm_kernel_rd_enable[6]),
      .conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_read(gmem_avm_kernel_rd_read[6]),
      .conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_write(gmem_avm_kernel_rd_write[6]),
      .conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_address(gmem_avm_kernel_rd_address[6]),
      .conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_writedata(gmem_avm_kernel_rd_writedata[6]),
      .conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_byteenable(gmem_avm_kernel_rd_byteenable[6]),
      .conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_waitrequest(gmem_avm_kernel_rd_waitrequest[6]),
      .conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_readdata(gmem_avm_kernel_rd_readdata[6]),
      .conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_readdatavalid(gmem_avm_kernel_rd_readdatavalid[6]),
      .conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_burstcount(gmem_avm_kernel_rd_burstcount[6]),
      .conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_writeack(gmem_avm_kernel_rd_writeack[6]),
      // AVM conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1
      .conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_enable(gmem_avm_kernel_wr_enable[1]),
      .conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_read(gmem_avm_kernel_wr_read[1]),
      .conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_write(gmem_avm_kernel_wr_write[1]),
      .conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_address(gmem_avm_kernel_wr_address[1]),
      .conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_writedata(gmem_avm_kernel_wr_writedata[1]),
      .conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_byteenable(gmem_avm_kernel_wr_byteenable[1]),
      .conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_waitrequest(gmem_avm_kernel_wr_waitrequest[1]),
      .conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_readdata(gmem_avm_kernel_wr_readdata[1]),
      .conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_readdatavalid(gmem_avm_kernel_wr_readdatavalid[1]),
      .conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_burstcount(gmem_avm_kernel_wr_burstcount[1]),
      .conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_writeack(gmem_avm_kernel_wr_writeack[1])
   );

   // INST conv2d3x3_std_ic_inst of conv2d3x3_std_ic_partition_wrapper
   conv2d3x3_std_ic_partition_wrapper conv2d3x3_std_ic_inst
   (
      .clock(clock),
      .clock2x(clock2x),
      .resetn(resetn),
      .cra_irq_conv2d3x3(kernel_irqs[2]),
      // AVS avs_conv2d3x3_cra
      .avs_conv2d3x3_cra_enable(cra_ring_node_avm_wire_2_enable),
      .avs_conv2d3x3_cra_read(cra_ring_node_avm_wire_2_read),
      .avs_conv2d3x3_cra_write(cra_ring_node_avm_wire_2_write),
      .avs_conv2d3x3_cra_address(cra_ring_node_avm_wire_2_address),
      .avs_conv2d3x3_cra_writedata(cra_ring_node_avm_wire_2_writedata),
      .avs_conv2d3x3_cra_byteenable(cra_ring_node_avm_wire_2_byteenable),
      .avs_conv2d3x3_cra_readdata(cra_ring_node_avm_wire_2_readdata),
      .avs_conv2d3x3_cra_readdatavalid(cra_ring_node_avm_wire_2_readdatavalid),
      // AVM conv2d3x3_0_avm_lm13_conv2d3x3
      .conv2d3x3_0_avm_lm13_conv2d3x3_enable(gmem_avm_kernel_rd_enable[7]),
      .conv2d3x3_0_avm_lm13_conv2d3x3_read(gmem_avm_kernel_rd_read[7]),
      .conv2d3x3_0_avm_lm13_conv2d3x3_write(gmem_avm_kernel_rd_write[7]),
      .conv2d3x3_0_avm_lm13_conv2d3x3_address(gmem_avm_kernel_rd_address[7]),
      .conv2d3x3_0_avm_lm13_conv2d3x3_writedata(gmem_avm_kernel_rd_writedata[7]),
      .conv2d3x3_0_avm_lm13_conv2d3x3_byteenable(gmem_avm_kernel_rd_byteenable[7]),
      .conv2d3x3_0_avm_lm13_conv2d3x3_waitrequest(gmem_avm_kernel_rd_waitrequest[7]),
      .conv2d3x3_0_avm_lm13_conv2d3x3_readdata(gmem_avm_kernel_rd_readdata[7]),
      .conv2d3x3_0_avm_lm13_conv2d3x3_readdatavalid(gmem_avm_kernel_rd_readdatavalid[7]),
      .conv2d3x3_0_avm_lm13_conv2d3x3_burstcount(gmem_avm_kernel_rd_burstcount[7]),
      .conv2d3x3_0_avm_lm13_conv2d3x3_writeack(gmem_avm_kernel_rd_writeack[7]),
      // AVM conv2d3x3_0_avm_lm18_conv2d3x3
      .conv2d3x3_0_avm_lm18_conv2d3x3_enable(gmem_avm_kernel_rd_enable[8]),
      .conv2d3x3_0_avm_lm18_conv2d3x3_read(gmem_avm_kernel_rd_read[8]),
      .conv2d3x3_0_avm_lm18_conv2d3x3_write(gmem_avm_kernel_rd_write[8]),
      .conv2d3x3_0_avm_lm18_conv2d3x3_address(gmem_avm_kernel_rd_address[8]),
      .conv2d3x3_0_avm_lm18_conv2d3x3_writedata(gmem_avm_kernel_rd_writedata[8]),
      .conv2d3x3_0_avm_lm18_conv2d3x3_byteenable(gmem_avm_kernel_rd_byteenable[8]),
      .conv2d3x3_0_avm_lm18_conv2d3x3_waitrequest(gmem_avm_kernel_rd_waitrequest[8]),
      .conv2d3x3_0_avm_lm18_conv2d3x3_readdata(gmem_avm_kernel_rd_readdata[8]),
      .conv2d3x3_0_avm_lm18_conv2d3x3_readdatavalid(gmem_avm_kernel_rd_readdatavalid[8]),
      .conv2d3x3_0_avm_lm18_conv2d3x3_burstcount(gmem_avm_kernel_rd_burstcount[8]),
      .conv2d3x3_0_avm_lm18_conv2d3x3_writeack(gmem_avm_kernel_rd_writeack[8]),
      // AVM conv2d3x3_0_avm_lm20_conv2d3x3
      .conv2d3x3_0_avm_lm20_conv2d3x3_enable(gmem_avm_kernel_rd_enable[9]),
      .conv2d3x3_0_avm_lm20_conv2d3x3_read(gmem_avm_kernel_rd_read[9]),
      .conv2d3x3_0_avm_lm20_conv2d3x3_write(gmem_avm_kernel_rd_write[9]),
      .conv2d3x3_0_avm_lm20_conv2d3x3_address(gmem_avm_kernel_rd_address[9]),
      .conv2d3x3_0_avm_lm20_conv2d3x3_writedata(gmem_avm_kernel_rd_writedata[9]),
      .conv2d3x3_0_avm_lm20_conv2d3x3_byteenable(gmem_avm_kernel_rd_byteenable[9]),
      .conv2d3x3_0_avm_lm20_conv2d3x3_waitrequest(gmem_avm_kernel_rd_waitrequest[9]),
      .conv2d3x3_0_avm_lm20_conv2d3x3_readdata(gmem_avm_kernel_rd_readdata[9]),
      .conv2d3x3_0_avm_lm20_conv2d3x3_readdatavalid(gmem_avm_kernel_rd_readdatavalid[9]),
      .conv2d3x3_0_avm_lm20_conv2d3x3_burstcount(gmem_avm_kernel_rd_burstcount[9]),
      .conv2d3x3_0_avm_lm20_conv2d3x3_writeack(gmem_avm_kernel_rd_writeack[9]),
      // AVM conv2d3x3_0_avm_lm25_conv2d3x3
      .conv2d3x3_0_avm_lm25_conv2d3x3_enable(gmem_avm_kernel_rd_enable[10]),
      .conv2d3x3_0_avm_lm25_conv2d3x3_read(gmem_avm_kernel_rd_read[10]),
      .conv2d3x3_0_avm_lm25_conv2d3x3_write(gmem_avm_kernel_rd_write[10]),
      .conv2d3x3_0_avm_lm25_conv2d3x3_address(gmem_avm_kernel_rd_address[10]),
      .conv2d3x3_0_avm_lm25_conv2d3x3_writedata(gmem_avm_kernel_rd_writedata[10]),
      .conv2d3x3_0_avm_lm25_conv2d3x3_byteenable(gmem_avm_kernel_rd_byteenable[10]),
      .conv2d3x3_0_avm_lm25_conv2d3x3_waitrequest(gmem_avm_kernel_rd_waitrequest[10]),
      .conv2d3x3_0_avm_lm25_conv2d3x3_readdata(gmem_avm_kernel_rd_readdata[10]),
      .conv2d3x3_0_avm_lm25_conv2d3x3_readdatavalid(gmem_avm_kernel_rd_readdatavalid[10]),
      .conv2d3x3_0_avm_lm25_conv2d3x3_burstcount(gmem_avm_kernel_rd_burstcount[10]),
      .conv2d3x3_0_avm_lm25_conv2d3x3_writeack(gmem_avm_kernel_rd_writeack[10]),
      // AVM conv2d3x3_0_avm_lm27_conv2d3x3
      .conv2d3x3_0_avm_lm27_conv2d3x3_enable(gmem_avm_kernel_rd_enable[11]),
      .conv2d3x3_0_avm_lm27_conv2d3x3_read(gmem_avm_kernel_rd_read[11]),
      .conv2d3x3_0_avm_lm27_conv2d3x3_write(gmem_avm_kernel_rd_write[11]),
      .conv2d3x3_0_avm_lm27_conv2d3x3_address(gmem_avm_kernel_rd_address[11]),
      .conv2d3x3_0_avm_lm27_conv2d3x3_writedata(gmem_avm_kernel_rd_writedata[11]),
      .conv2d3x3_0_avm_lm27_conv2d3x3_byteenable(gmem_avm_kernel_rd_byteenable[11]),
      .conv2d3x3_0_avm_lm27_conv2d3x3_waitrequest(gmem_avm_kernel_rd_waitrequest[11]),
      .conv2d3x3_0_avm_lm27_conv2d3x3_readdata(gmem_avm_kernel_rd_readdata[11]),
      .conv2d3x3_0_avm_lm27_conv2d3x3_readdatavalid(gmem_avm_kernel_rd_readdatavalid[11]),
      .conv2d3x3_0_avm_lm27_conv2d3x3_burstcount(gmem_avm_kernel_rd_burstcount[11]),
      .conv2d3x3_0_avm_lm27_conv2d3x3_writeack(gmem_avm_kernel_rd_writeack[11]),
      // AVM conv2d3x3_0_avm_lm_conv2d3x3
      .conv2d3x3_0_avm_lm_conv2d3x3_enable(gmem_avm_kernel_rd_enable[12]),
      .conv2d3x3_0_avm_lm_conv2d3x3_read(gmem_avm_kernel_rd_read[12]),
      .conv2d3x3_0_avm_lm_conv2d3x3_write(gmem_avm_kernel_rd_write[12]),
      .conv2d3x3_0_avm_lm_conv2d3x3_address(gmem_avm_kernel_rd_address[12]),
      .conv2d3x3_0_avm_lm_conv2d3x3_writedata(gmem_avm_kernel_rd_writedata[12]),
      .conv2d3x3_0_avm_lm_conv2d3x3_byteenable(gmem_avm_kernel_rd_byteenable[12]),
      .conv2d3x3_0_avm_lm_conv2d3x3_waitrequest(gmem_avm_kernel_rd_waitrequest[12]),
      .conv2d3x3_0_avm_lm_conv2d3x3_readdata(gmem_avm_kernel_rd_readdata[12]),
      .conv2d3x3_0_avm_lm_conv2d3x3_readdatavalid(gmem_avm_kernel_rd_readdatavalid[12]),
      .conv2d3x3_0_avm_lm_conv2d3x3_burstcount(gmem_avm_kernel_rd_burstcount[12]),
      .conv2d3x3_0_avm_lm_conv2d3x3_writeack(gmem_avm_kernel_rd_writeack[12]),
      // AVM conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3
      .conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_enable(gmem_avm_kernel_rd_enable[13]),
      .conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_read(gmem_avm_kernel_rd_read[13]),
      .conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_write(gmem_avm_kernel_rd_write[13]),
      .conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_address(gmem_avm_kernel_rd_address[13]),
      .conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_writedata(gmem_avm_kernel_rd_writedata[13]),
      .conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_byteenable(gmem_avm_kernel_rd_byteenable[13]),
      .conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_waitrequest(gmem_avm_kernel_rd_waitrequest[13]),
      .conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_readdata(gmem_avm_kernel_rd_readdata[13]),
      .conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_readdatavalid(gmem_avm_kernel_rd_readdatavalid[13]),
      .conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_burstcount(gmem_avm_kernel_rd_burstcount[13]),
      .conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_writeack(gmem_avm_kernel_rd_writeack[13]),
      // AVM conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3
      .conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_enable(gmem_avm_kernel_wr_enable[2]),
      .conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_read(gmem_avm_kernel_wr_read[2]),
      .conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_write(gmem_avm_kernel_wr_write[2]),
      .conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_address(gmem_avm_kernel_wr_address[2]),
      .conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_writedata(gmem_avm_kernel_wr_writedata[2]),
      .conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_byteenable(gmem_avm_kernel_wr_byteenable[2]),
      .conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_waitrequest(gmem_avm_kernel_wr_waitrequest[2]),
      .conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_readdata(gmem_avm_kernel_wr_readdata[2]),
      .conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_readdatavalid(gmem_avm_kernel_wr_readdatavalid[2]),
      .conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_burstcount(gmem_avm_kernel_wr_burstcount[2]),
      .conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_writeack(gmem_avm_kernel_wr_writeack[2])
   );

   // INST maxpool2d_std_ic_inst of maxpool2d_std_ic_partition_wrapper
   maxpool2d_std_ic_partition_wrapper maxpool2d_std_ic_inst
   (
      .clock(clock),
      .clock2x(clock2x),
      .resetn(resetn),
      .cra_irq_maxpool2d(kernel_irqs[3]),
      // AVS avs_maxpool2d_cra
      .avs_maxpool2d_cra_enable(cra_ring_node_avm_wire_3_enable),
      .avs_maxpool2d_cra_read(cra_ring_node_avm_wire_3_read),
      .avs_maxpool2d_cra_write(cra_ring_node_avm_wire_3_write),
      .avs_maxpool2d_cra_address(cra_ring_node_avm_wire_3_address),
      .avs_maxpool2d_cra_writedata(cra_ring_node_avm_wire_3_writedata),
      .avs_maxpool2d_cra_byteenable(cra_ring_node_avm_wire_3_byteenable),
      .avs_maxpool2d_cra_readdata(cra_ring_node_avm_wire_3_readdata),
      .avs_maxpool2d_cra_readdatavalid(cra_ring_node_avm_wire_3_readdatavalid),
      // AVM maxpool2d_0_avm_lm_maxpool2d
      .maxpool2d_0_avm_lm_maxpool2d_enable(gmem_avm_kernel_rd_enable[14]),
      .maxpool2d_0_avm_lm_maxpool2d_read(gmem_avm_kernel_rd_read[14]),
      .maxpool2d_0_avm_lm_maxpool2d_write(gmem_avm_kernel_rd_write[14]),
      .maxpool2d_0_avm_lm_maxpool2d_address(gmem_avm_kernel_rd_address[14]),
      .maxpool2d_0_avm_lm_maxpool2d_writedata(gmem_avm_kernel_rd_writedata[14]),
      .maxpool2d_0_avm_lm_maxpool2d_byteenable(gmem_avm_kernel_rd_byteenable[14]),
      .maxpool2d_0_avm_lm_maxpool2d_waitrequest(gmem_avm_kernel_rd_waitrequest[14]),
      .maxpool2d_0_avm_lm_maxpool2d_readdata(gmem_avm_kernel_rd_readdata[14]),
      .maxpool2d_0_avm_lm_maxpool2d_readdatavalid(gmem_avm_kernel_rd_readdatavalid[14]),
      .maxpool2d_0_avm_lm_maxpool2d_burstcount(gmem_avm_kernel_rd_burstcount[14]),
      .maxpool2d_0_avm_lm_maxpool2d_writeack(gmem_avm_kernel_rd_writeack[14]),
      // AVM maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d
      .maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_enable(gmem_avm_kernel_wr_enable[3]),
      .maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_read(gmem_avm_kernel_wr_read[3]),
      .maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_write(gmem_avm_kernel_wr_write[3]),
      .maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_address(gmem_avm_kernel_wr_address[3]),
      .maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_writedata(gmem_avm_kernel_wr_writedata[3]),
      .maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_byteenable(gmem_avm_kernel_wr_byteenable[3]),
      .maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_waitrequest(gmem_avm_kernel_wr_waitrequest[3]),
      .maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_readdata(gmem_avm_kernel_wr_readdata[3]),
      .maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_readdatavalid(gmem_avm_kernel_wr_readdatavalid[3]),
      .maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_burstcount(gmem_avm_kernel_wr_burstcount[3]),
      .maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_writeack(gmem_avm_kernel_wr_writeack[3])
   );

   assign kernel_irq = |kernel_irqs;
   // INST lsu_ic_top_gmem of lsu_ic_top
   lsu_ic_top
   #(
      .AWIDTH(31),
      .MWIDTH_BYTES(64),
      .BURST_CNT_W(5),
      .NUM_RD_PORT(15),
      .NUM_WR_PORT(4),
      .NUM_DIMM(1),
      .ENABLE_MULTIPLE_WR_RING(0),
      .ENABLE_LAST_WAIT(0),
      .NUM_REORDER(1),
      .HYPER_PIPELINE(0),
      .ENABLE_BSP_WAITREQUEST_ALLOWANCE(0),
      .ENABLE_BSP_AVMM_WRITE_ACK(0),
      .WRITE_ACK_FIFO_DEPTH(1024),
      .AVM_WRITE_DATA_LATENESS(0),
      .AVM_READ_DATA_LATENESS(0),
      .WIDE_DATA_SLICING(0),
      .ROOT_FIFO_STALL_IN_EARLINESS(0),
      .ROOT_WFIFO_VALID_IN_EARLINESS(0),
      .ALLOW_HIGH_SPEED_FIFO_USAGE(0),
      .PIPELINE_RD_RETURN(0),
      .NUM_AVM_OUTPUT_PIPE_STAGES(1),
      .ROOT_FIFO_DEPTH(512),
      .RETURN_DATA_FIFO_DEPTH(512),
      .MAX_REQUESTS_PER_LSU(4),
      .NUM_MEM_SYSTEMS(1),
      .NUM_BANKS_PER_MEM_SYSTEM({1}),
      .NUM_BANKS_W_PER_MEM_SYSTEM({1}),
      .PERMUTE_BIT_LSB_PER_MEM_SYSTEM({1}),
      .BANK_BIT_LSB_PER_MEM_SYSTEM({30}),
      .ENABLE_BANK_INTERLEAVING({0}),
      .ENABLE_SWDIMM(0),
      .LARGEST_NUM_BANKS(1),
      .ROOT_PORT_MAP('{'{0}}),
      .ROOT_ARB_BALANCED_RW(0),
      .SYNCHRONIZE_RESET(1)
   )
   lsu_ic_top_gmem
   (
      .clk(clock),
      .resetn(resetn),
      .i_rd_request(gmem_avm_kernel_rd_read),
      .i_rd_address(gmem_avm_kernel_rd_address),
      .i_rd_burstcount(gmem_avm_kernel_rd_burstcount),
      .o_rd_waitrequest(gmem_avm_kernel_rd_waitrequest),
      .o_avm_readdata(gmem_avm_kernel_rd_readdata),
      .o_avm_readdatavalid(gmem_avm_kernel_rd_readdatavalid),
      .i_wr_byteenable(gmem_avm_kernel_wr_byteenable),
      .i_wr_address(gmem_avm_kernel_wr_address),
      .i_wr_request(gmem_avm_kernel_wr_write),
      .i_wr_burstcount(gmem_avm_kernel_wr_burstcount),
      .i_wr_writedata(gmem_avm_kernel_wr_writedata),
      .o_wr_waitrequest(gmem_avm_kernel_wr_waitrequest),
      .o_avm_writeack(gmem_avm_kernel_wr_writeack),
      .i_avm_waitrequest(gmem_ic_avm_waitrequest),
      .i_avm_write_ack(gmem_ic_avm_writeack),
      .i_avm_readdata(gmem_ic_avm_readdata),
      .i_avm_readdatavalid(gmem_ic_avm_readdatavalid),
      .o_avm_byteenable(gmem_ic_avm_byteenable),
      .o_avm_address(gmem_ic_avm_address),
      .o_avm_read(gmem_ic_avm_read),
      .o_avm_write(gmem_ic_avm_write),
      .o_avm_burstcount(gmem_ic_avm_burstcount),
      .o_avm_writedata(gmem_ic_avm_writedata)
   );

   assign avm_mem_gmem_0_DDR_port_0_0_rw_read = gmem_ic_avm_read[0];
   assign avm_mem_gmem_0_DDR_port_0_0_rw_write = gmem_ic_avm_write[0];
   assign avm_mem_gmem_0_DDR_port_0_0_rw_burstcount = gmem_ic_avm_burstcount[0];
   assign avm_mem_gmem_0_DDR_port_0_0_rw_address = gmem_ic_avm_address[0];
   assign avm_mem_gmem_0_DDR_port_0_0_rw_writedata = gmem_ic_avm_writedata[0];
   assign avm_mem_gmem_0_DDR_port_0_0_rw_byteenable = gmem_ic_avm_byteenable[0];
   assign gmem_ic_avm_waitrequest[0] = avm_mem_gmem_0_DDR_port_0_0_rw_waitrequest;
   assign gmem_ic_avm_readdata[0] = avm_mem_gmem_0_DDR_port_0_0_rw_readdata;
   assign gmem_ic_avm_readdatavalid[0] = avm_mem_gmem_0_DDR_port_0_0_rw_readdatavalid;
   // INST cra_ring_wrapper_inst of cra_ring_wrapper
   cra_ring_wrapper cra_ring_wrapper_inst
   (
      .clock(clock),
      .resetn(resetn),
      // AVS cra_ring_root_avs
      .cra_ring_root_avs_enable(cra_ring_root_avs_enable),
      .cra_ring_root_avs_read(cra_ring_root_avs_read),
      .cra_ring_root_avs_write(cra_ring_root_avs_write),
      .cra_ring_root_avs_address(cra_ring_root_avs_address),
      .cra_ring_root_avs_writedata(cra_ring_root_avs_writedata),
      .cra_ring_root_avs_byteenable(cra_ring_root_avs_byteenable),
      .cra_ring_root_avs_waitrequest(cra_ring_root_avs_waitrequest),
      .cra_ring_root_avs_readdata(cra_ring_root_avs_readdata),
      .cra_ring_root_avs_readdatavalid(cra_ring_root_avs_readdatavalid),
      // AVM cra_ring_avm_0
      .cra_ring_avm_0_enable(cra_ring_node_avm_wire_0_enable),
      .cra_ring_avm_0_read(cra_ring_node_avm_wire_0_read),
      .cra_ring_avm_0_write(cra_ring_node_avm_wire_0_write),
      .cra_ring_avm_0_address(cra_ring_node_avm_wire_0_address),
      .cra_ring_avm_0_writedata(cra_ring_node_avm_wire_0_writedata),
      .cra_ring_avm_0_byteenable(cra_ring_node_avm_wire_0_byteenable),
      .cra_ring_avm_0_readdata(cra_ring_node_avm_wire_0_readdata),
      .cra_ring_avm_0_readdatavalid(cra_ring_node_avm_wire_0_readdatavalid),
      .cra_ring_avm_0_burstcount(cra_ring_node_avm_wire_0_burstcount),
      // AVM cra_ring_avm_1
      .cra_ring_avm_1_enable(cra_ring_node_avm_wire_1_enable),
      .cra_ring_avm_1_read(cra_ring_node_avm_wire_1_read),
      .cra_ring_avm_1_write(cra_ring_node_avm_wire_1_write),
      .cra_ring_avm_1_address(cra_ring_node_avm_wire_1_address),
      .cra_ring_avm_1_writedata(cra_ring_node_avm_wire_1_writedata),
      .cra_ring_avm_1_byteenable(cra_ring_node_avm_wire_1_byteenable),
      .cra_ring_avm_1_readdata(cra_ring_node_avm_wire_1_readdata),
      .cra_ring_avm_1_readdatavalid(cra_ring_node_avm_wire_1_readdatavalid),
      .cra_ring_avm_1_burstcount(cra_ring_node_avm_wire_1_burstcount),
      // AVM cra_ring_avm_2
      .cra_ring_avm_2_enable(cra_ring_node_avm_wire_2_enable),
      .cra_ring_avm_2_read(cra_ring_node_avm_wire_2_read),
      .cra_ring_avm_2_write(cra_ring_node_avm_wire_2_write),
      .cra_ring_avm_2_address(cra_ring_node_avm_wire_2_address),
      .cra_ring_avm_2_writedata(cra_ring_node_avm_wire_2_writedata),
      .cra_ring_avm_2_byteenable(cra_ring_node_avm_wire_2_byteenable),
      .cra_ring_avm_2_readdata(cra_ring_node_avm_wire_2_readdata),
      .cra_ring_avm_2_readdatavalid(cra_ring_node_avm_wire_2_readdatavalid),
      .cra_ring_avm_2_burstcount(cra_ring_node_avm_wire_2_burstcount),
      // AVM cra_ring_avm_3
      .cra_ring_avm_3_enable(cra_ring_node_avm_wire_3_enable),
      .cra_ring_avm_3_read(cra_ring_node_avm_wire_3_read),
      .cra_ring_avm_3_write(cra_ring_node_avm_wire_3_write),
      .cra_ring_avm_3_address(cra_ring_node_avm_wire_3_address),
      .cra_ring_avm_3_writedata(cra_ring_node_avm_wire_3_writedata),
      .cra_ring_avm_3_byteenable(cra_ring_node_avm_wire_3_byteenable),
      .cra_ring_avm_3_readdata(cra_ring_node_avm_wire_3_readdata),
      .cra_ring_avm_3_readdatavalid(cra_ring_node_avm_wire_3_readdatavalid),
      .cra_ring_avm_3_burstcount(cra_ring_node_avm_wire_3_burstcount)
   );

endmodule

/////////////////////////////////////////////////////////////////
// MODULE avgpool2d_std_ic_partition_wrapper
/////////////////////////////////////////////////////////////////
module avgpool2d_std_ic_partition_wrapper
(
   input logic clock,
   input logic clock2x,
   input logic resetn,
   output logic cra_irq_avgpool2d,
   // AVS avs_avgpool2d_cra
   input logic avs_avgpool2d_cra_enable,
   input logic avs_avgpool2d_cra_read,
   input logic avs_avgpool2d_cra_write,
   input logic [4:0] avs_avgpool2d_cra_address,
   input logic [63:0] avs_avgpool2d_cra_writedata,
   input logic [7:0] avs_avgpool2d_cra_byteenable,
   output logic [63:0] avs_avgpool2d_cra_readdata,
   output logic avs_avgpool2d_cra_readdatavalid,
   // AVM avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d
   output logic avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_enable,
   output logic avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_read,
   output logic avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_write,
   output logic [30:0] avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_address,
   output logic [511:0] avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_writedata,
   output logic [63:0] avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_byteenable,
   input logic avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_waitrequest,
   input logic [511:0] avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_readdata,
   input logic avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_readdatavalid,
   output logic [4:0] avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_burstcount,
   input logic avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_writeack,
   // AVM avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d
   output logic avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_enable,
   output logic avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_read,
   output logic avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_write,
   output logic [30:0] avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_address,
   output logic [511:0] avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_writedata,
   output logic [63:0] avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_byteenable,
   input logic avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_waitrequest,
   input logic [511:0] avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_readdata,
   input logic avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_readdatavalid,
   output logic [4:0] avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_burstcount,
   input logic avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_writeack
);
   logic avgpool2d_start;
   logic [0:0] avgpool2d_start_chain;
   logic [0:0] avgpool2d_start_kernel_copy;
   logic [0:0] avgpool2d_start_task_fd;
   logic [0:0] avgpool2d_start_finish_element;
   logic avgpool2d_finish;
   logic [0:0] avgpool2d_finish_kernel_copy;
   logic [0:0] avgpool2d_finish_chain;
   logic [63:0] avgpool2d_global_size [2:0];
   logic [31:0] avgpool2d_num_groups [2:0];
   logic [31:0] avgpool2d_local_size [2:0];
   logic [63:0] avgpool2d_global_offset [2:0];
   logic [31:0] avgpool2d_work_dim;
   logic [31:0] avgpool2d_wg_size;
   logic [0:0] avgpool2d_wg_disp_stall_in;
   logic [0:0] avgpool2d_wg_disp_stall_in_lookahead;
   logic [0:0] avgpool2d_wg_disp_valid_out;
   logic avgpool2d_wg_disp_start_out;
   logic [31:0] avgpool2d_wg_disp_group_id_out [2:0];
   logic [31:0] avgpool2d_wg_disp_global_id_base_out [2:0];
   logic avgpool2d_wg_disp_dispatched_all_groups;
   logic [63:0] avgpool2d_global_id [1][2:0];
   logic [31:0] avgpool2d_local_id [1][2:0];
   logic [31:0] avgpool2d_group_id [1][2:0];
   logic [0:0] avgpool2d_pending_write;
   logic [0:0] avgpool2d_lsu_active;
   logic [0:0] avgpool2d_valid_in;
   logic [0:0] avgpool2d_valid_out;
   logic [0:0] avgpool2d_stall_in;
   logic [0:0] avgpool2d_stall_out;
   logic avgpool2d_cra_pending_write;
   logic avgpool2d_cra_lsu_active;
   logic avgpool2d_cra_valid_in;
   logic [127:0] avgpool2d_kernel_arguments;

   assign avgpool2d_start_chain[0] = avgpool2d_start;
   assign avgpool2d_finish_chain[0] = 1'b1;
   assign avgpool2d_cra_pending_write = |avgpool2d_pending_write;
   assign avgpool2d_cra_lsu_active = |avgpool2d_lsu_active;
   assign avgpool2d_cra_valid_in = |avgpool2d_valid_in;
   assign avgpool2d_stall_in = 0;
   // INST avgpool2d_workgroup_dispatcher of acl_work_group_dispatcher
   acl_work_group_dispatcher
   #(
      .WIDTH(32),
      .NUM_COPIES(1),
      .RUN_FOREVER(0),
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0),
      .HYPER_PIPELINE(0)
   )
   avgpool2d_workgroup_dispatcher
   (
      .clock(clock),
      .resetn(resetn),
      .start(avgpool2d_start),
      .num_groups(avgpool2d_num_groups),
      .local_size(avgpool2d_local_size),
      .stall_in(avgpool2d_wg_disp_stall_in),
      .stall_in_lookahead(avgpool2d_wg_disp_stall_in_lookahead),
      .valid_out(avgpool2d_wg_disp_valid_out),
      .group_id_out(avgpool2d_wg_disp_group_id_out),
      .global_id_base_out(avgpool2d_wg_disp_global_id_base_out),
      .start_out(avgpool2d_wg_disp_start_out),
      .dispatched_all_groups(avgpool2d_wg_disp_dispatched_all_groups)
   );

   // INST avgpool2d_finish_detector of acl_kernel_finish_detector
   acl_kernel_finish_detector
   #(
      .NUM_COPIES(1),
      .WG_SIZE_W(32),
      .GLOBAL_ID_W(32),
      .TESSELLATION_SIZE(19),
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0),
      .HYPER_PIPELINE(0)
   )
   avgpool2d_finish_detector
   (
      .clock(clock),
      .resetn(resetn),
      .start(avgpool2d_start),
      .wg_size(avgpool2d_wg_size),
      .wg_dispatch_valid_out(avgpool2d_wg_disp_valid_out),
      .wg_dispatch_stall_in(avgpool2d_wg_disp_stall_in),
      .dispatched_all_groups(avgpool2d_wg_disp_dispatched_all_groups),
      .kernel_copy_valid_out(avgpool2d_valid_out),
      .kernel_copy_stall_in(avgpool2d_stall_in),
      .pending_writes(avgpool2d_cra_pending_write),
      .finish(avgpool2d_finish)
   );

   // INST avgpool2d_cra_slave_inst of avgpool2d_function_cra_slave
   avgpool2d_function_cra_slave avgpool2d_cra_slave_inst
   (
      .clock(clock),
      .resetn(resetn),
      .start(avgpool2d_start),
      .finish(avgpool2d_finish),
      .global_offset_0(avgpool2d_global_offset[0]),
      .global_offset_1(avgpool2d_global_offset[1]),
      .global_offset_2(avgpool2d_global_offset[2]),
      .work_dim(avgpool2d_work_dim),
      .has_a_lsu_active(avgpool2d_cra_lsu_active),
      .has_a_write_pending(avgpool2d_cra_pending_write),
      .valid_in(avgpool2d_cra_valid_in),
      .global_size_0(avgpool2d_global_size[0]),
      .global_size_1(avgpool2d_global_size[1]),
      .global_size_2(avgpool2d_global_size[2]),
      .num_groups_0(avgpool2d_num_groups[0]),
      .num_groups_1(avgpool2d_num_groups[1]),
      .num_groups_2(avgpool2d_num_groups[2]),
      .local_size_0(avgpool2d_local_size[0]),
      .local_size_1(avgpool2d_local_size[1]),
      .local_size_2(avgpool2d_local_size[2]),
      .workgroup_size(avgpool2d_wg_size),
      .kernel_arguments(avgpool2d_kernel_arguments),
      .cra_irq(cra_irq_avgpool2d),
      // AVS avs_cra
      .avs_cra_enable(avs_avgpool2d_cra_enable),
      .avs_cra_read(avs_avgpool2d_cra_read),
      .avs_cra_write(avs_avgpool2d_cra_write),
      .avs_cra_address(avs_avgpool2d_cra_address),
      .avs_cra_writedata(avs_avgpool2d_cra_writedata),
      .avs_cra_byteenable(avs_avgpool2d_cra_byteenable),
      .avs_cra_readdata(avs_avgpool2d_cra_readdata),
      .avs_cra_readdatavalid(avs_avgpool2d_cra_readdatavalid)
   );

   // INST avgpool2d_id_iter_inst_0 of acl_id_iterator
   acl_id_iterator
   #(
      .WIDTH(32),
      .LOCAL_WIDTH_X(32),
      .LOCAL_WIDTH_Y(32),
      .LOCAL_WIDTH_Z(32),
      .STALL_OUT_LOOKAHEAD_COUNT(1),
      .VALID_OUT_LOOKAHEAD_COUNT(3),
      .ENABLE_TESSELLATION(1),
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0),
      .HYPER_PIPELINE(0),
      .USE_GLOBAL_WORK_OFFSET(1)
   )
   avgpool2d_id_iter_inst_0
   (
      .clock(clock),
      .resetn(resetn),
      .start(avgpool2d_wg_disp_start_out),
      .valid_in(avgpool2d_wg_disp_valid_out[0]),
      .stall_out(avgpool2d_wg_disp_stall_in[0]),
      .stall_out_lookahead(avgpool2d_wg_disp_stall_in_lookahead[0]),
      .stall_in(avgpool2d_stall_out[0]),
      .valid_out(avgpool2d_valid_in[0]),
      .group_id_in(avgpool2d_wg_disp_group_id_out),
      .global_id_base_in(avgpool2d_wg_disp_global_id_base_out),
      .local_size(avgpool2d_local_size),
      .global_size(avgpool2d_global_size),
      .global_work_offset(avgpool2d_global_offset),
      .local_id(avgpool2d_local_id[0]),
      .global_id(avgpool2d_global_id[0]),
      .group_id(avgpool2d_group_id[0])
   );

   // INST avgpool2d_inst_0 of avgpool2d_top_wrapper_0
   avgpool2d_top_wrapper_0 avgpool2d_inst_0
   (
      .start(avgpool2d_start_kernel_copy[0]),
      .kernel_arguments(avgpool2d_kernel_arguments),
      .work_dim(avgpool2d_work_dim),
      .global_offset(avgpool2d_global_offset),
      .kernel_valid_out(avgpool2d_valid_out[0]),
      .has_a_write_pending(avgpool2d_pending_write[0]),
      .has_a_lsu_active(avgpool2d_lsu_active[0]),
      .global_id(avgpool2d_global_id[0]),
      .local_id(avgpool2d_local_id[0]),
      .group_id(avgpool2d_group_id[0]),
      .global_size(avgpool2d_global_size),
      .local_size(avgpool2d_local_size),
      .num_groups(avgpool2d_num_groups),
      .workgroup_size(avgpool2d_wg_size),
      .kernel_stall_out(avgpool2d_stall_out[0]),
      .kernel_valid_in(avgpool2d_valid_in[0]),
      .clock(clock),
      .resetn(resetn),
      .clock2x(clock2x),
      // AVM avm_unnamed_avgpool2d1_avgpool2d
      .avm_unnamed_avgpool2d1_avgpool2d_enable(avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_enable),
      .avm_unnamed_avgpool2d1_avgpool2d_read(avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_read),
      .avm_unnamed_avgpool2d1_avgpool2d_write(avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_write),
      .avm_unnamed_avgpool2d1_avgpool2d_address(avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_address),
      .avm_unnamed_avgpool2d1_avgpool2d_writedata(avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_writedata),
      .avm_unnamed_avgpool2d1_avgpool2d_byteenable(avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_byteenable),
      .avm_unnamed_avgpool2d1_avgpool2d_waitrequest(avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_waitrequest),
      .avm_unnamed_avgpool2d1_avgpool2d_readdata(avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_readdata),
      .avm_unnamed_avgpool2d1_avgpool2d_readdatavalid(avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_readdatavalid),
      .avm_unnamed_avgpool2d1_avgpool2d_burstcount(avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_burstcount),
      .avm_unnamed_avgpool2d1_avgpool2d_writeack(avgpool2d_0_avm_unnamed_avgpool2d1_avgpool2d_writeack),
      // AVM avm_unnamed_avgpool2d2_avgpool2d
      .avm_unnamed_avgpool2d2_avgpool2d_enable(avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_enable),
      .avm_unnamed_avgpool2d2_avgpool2d_read(avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_read),
      .avm_unnamed_avgpool2d2_avgpool2d_write(avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_write),
      .avm_unnamed_avgpool2d2_avgpool2d_address(avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_address),
      .avm_unnamed_avgpool2d2_avgpool2d_writedata(avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_writedata),
      .avm_unnamed_avgpool2d2_avgpool2d_byteenable(avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_byteenable),
      .avm_unnamed_avgpool2d2_avgpool2d_waitrequest(avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_waitrequest),
      .avm_unnamed_avgpool2d2_avgpool2d_readdata(avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_readdata),
      .avm_unnamed_avgpool2d2_avgpool2d_readdatavalid(avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_readdatavalid),
      .avm_unnamed_avgpool2d2_avgpool2d_burstcount(avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_burstcount),
      .avm_unnamed_avgpool2d2_avgpool2d_writeack(avgpool2d_0_avm_unnamed_avgpool2d2_avgpool2d_writeack)
   );

   // INST avgpool2d_start_elem_inst_0 of acl_start_signal_chain_element
   acl_start_signal_chain_element
   #(
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0)
   )
   avgpool2d_start_elem_inst_0
   (
      .clock(clock),
      .resetn(resetn),
      .start_in(avgpool2d_start_chain[0]),
      .start_kernel(avgpool2d_start_kernel_copy[0]),
      .start_finish_detector(avgpool2d_start_task_fd[0]),
      .start_finish_chain_element(avgpool2d_start_finish_element[0]),
      .start_chain()
   );

endmodule

/////////////////////////////////////////////////////////////////
// MODULE conv2d1x1_std_ic_partition_wrapper
/////////////////////////////////////////////////////////////////
module conv2d1x1_std_ic_partition_wrapper
(
   input logic clock,
   input logic clock2x,
   input logic resetn,
   output logic cra_irq_conv2d1x1,
   // AVS avs_conv2d1x1_cra
   input logic avs_conv2d1x1_cra_enable,
   input logic avs_conv2d1x1_cra_read,
   input logic avs_conv2d1x1_cra_write,
   input logic [4:0] avs_conv2d1x1_cra_address,
   input logic [63:0] avs_conv2d1x1_cra_writedata,
   input logic [7:0] avs_conv2d1x1_cra_byteenable,
   output logic [63:0] avs_conv2d1x1_cra_readdata,
   output logic avs_conv2d1x1_cra_readdatavalid,
   // AVM conv2d1x1_0_avm_lm11_conv2d1x1
   output logic conv2d1x1_0_avm_lm11_conv2d1x1_enable,
   output logic conv2d1x1_0_avm_lm11_conv2d1x1_read,
   output logic conv2d1x1_0_avm_lm11_conv2d1x1_write,
   output logic [30:0] conv2d1x1_0_avm_lm11_conv2d1x1_address,
   output logic [511:0] conv2d1x1_0_avm_lm11_conv2d1x1_writedata,
   output logic [63:0] conv2d1x1_0_avm_lm11_conv2d1x1_byteenable,
   input logic conv2d1x1_0_avm_lm11_conv2d1x1_waitrequest,
   input logic [511:0] conv2d1x1_0_avm_lm11_conv2d1x1_readdata,
   input logic conv2d1x1_0_avm_lm11_conv2d1x1_readdatavalid,
   output logic [4:0] conv2d1x1_0_avm_lm11_conv2d1x1_burstcount,
   input logic conv2d1x1_0_avm_lm11_conv2d1x1_writeack,
   // AVM conv2d1x1_0_avm_lm12_conv2d1x1
   output logic conv2d1x1_0_avm_lm12_conv2d1x1_enable,
   output logic conv2d1x1_0_avm_lm12_conv2d1x1_read,
   output logic conv2d1x1_0_avm_lm12_conv2d1x1_write,
   output logic [30:0] conv2d1x1_0_avm_lm12_conv2d1x1_address,
   output logic [511:0] conv2d1x1_0_avm_lm12_conv2d1x1_writedata,
   output logic [63:0] conv2d1x1_0_avm_lm12_conv2d1x1_byteenable,
   input logic conv2d1x1_0_avm_lm12_conv2d1x1_waitrequest,
   input logic [511:0] conv2d1x1_0_avm_lm12_conv2d1x1_readdata,
   input logic conv2d1x1_0_avm_lm12_conv2d1x1_readdatavalid,
   output logic [4:0] conv2d1x1_0_avm_lm12_conv2d1x1_burstcount,
   input logic conv2d1x1_0_avm_lm12_conv2d1x1_writeack,
   // AVM conv2d1x1_0_avm_lm14_conv2d1x1
   output logic conv2d1x1_0_avm_lm14_conv2d1x1_enable,
   output logic conv2d1x1_0_avm_lm14_conv2d1x1_read,
   output logic conv2d1x1_0_avm_lm14_conv2d1x1_write,
   output logic [30:0] conv2d1x1_0_avm_lm14_conv2d1x1_address,
   output logic [511:0] conv2d1x1_0_avm_lm14_conv2d1x1_writedata,
   output logic [63:0] conv2d1x1_0_avm_lm14_conv2d1x1_byteenable,
   input logic conv2d1x1_0_avm_lm14_conv2d1x1_waitrequest,
   input logic [511:0] conv2d1x1_0_avm_lm14_conv2d1x1_readdata,
   input logic conv2d1x1_0_avm_lm14_conv2d1x1_readdatavalid,
   output logic [4:0] conv2d1x1_0_avm_lm14_conv2d1x1_burstcount,
   input logic conv2d1x1_0_avm_lm14_conv2d1x1_writeack,
   // AVM conv2d1x1_0_avm_lm16_conv2d1x1
   output logic conv2d1x1_0_avm_lm16_conv2d1x1_enable,
   output logic conv2d1x1_0_avm_lm16_conv2d1x1_read,
   output logic conv2d1x1_0_avm_lm16_conv2d1x1_write,
   output logic [30:0] conv2d1x1_0_avm_lm16_conv2d1x1_address,
   output logic [511:0] conv2d1x1_0_avm_lm16_conv2d1x1_writedata,
   output logic [63:0] conv2d1x1_0_avm_lm16_conv2d1x1_byteenable,
   input logic conv2d1x1_0_avm_lm16_conv2d1x1_waitrequest,
   input logic [511:0] conv2d1x1_0_avm_lm16_conv2d1x1_readdata,
   input logic conv2d1x1_0_avm_lm16_conv2d1x1_readdatavalid,
   output logic [4:0] conv2d1x1_0_avm_lm16_conv2d1x1_burstcount,
   input logic conv2d1x1_0_avm_lm16_conv2d1x1_writeack,
   // AVM conv2d1x1_0_avm_lm_conv2d1x1
   output logic conv2d1x1_0_avm_lm_conv2d1x1_enable,
   output logic conv2d1x1_0_avm_lm_conv2d1x1_read,
   output logic conv2d1x1_0_avm_lm_conv2d1x1_write,
   output logic [30:0] conv2d1x1_0_avm_lm_conv2d1x1_address,
   output logic [511:0] conv2d1x1_0_avm_lm_conv2d1x1_writedata,
   output logic [63:0] conv2d1x1_0_avm_lm_conv2d1x1_byteenable,
   input logic conv2d1x1_0_avm_lm_conv2d1x1_waitrequest,
   input logic [511:0] conv2d1x1_0_avm_lm_conv2d1x1_readdata,
   input logic conv2d1x1_0_avm_lm_conv2d1x1_readdatavalid,
   output logic [4:0] conv2d1x1_0_avm_lm_conv2d1x1_burstcount,
   input logic conv2d1x1_0_avm_lm_conv2d1x1_writeack,
   // AVM conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1
   output logic conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_enable,
   output logic conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_read,
   output logic conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_write,
   output logic [30:0] conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_address,
   output logic [511:0] conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_writedata,
   output logic [63:0] conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_byteenable,
   input logic conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_waitrequest,
   input logic [511:0] conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_readdata,
   input logic conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_readdatavalid,
   output logic [4:0] conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_burstcount,
   input logic conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_writeack,
   // AVM conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1
   output logic conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_enable,
   output logic conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_read,
   output logic conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_write,
   output logic [30:0] conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_address,
   output logic [511:0] conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_writedata,
   output logic [63:0] conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_byteenable,
   input logic conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_waitrequest,
   input logic [511:0] conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_readdata,
   input logic conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_readdatavalid,
   output logic [4:0] conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_burstcount,
   input logic conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_writeack
);
   logic conv2d1x1_start;
   logic [0:0] conv2d1x1_start_chain;
   logic [0:0] conv2d1x1_start_kernel_copy;
   logic [0:0] conv2d1x1_start_task_fd;
   logic [0:0] conv2d1x1_start_finish_element;
   logic conv2d1x1_finish;
   logic [0:0] conv2d1x1_finish_kernel_copy;
   logic [0:0] conv2d1x1_finish_chain;
   logic [63:0] conv2d1x1_global_size [2:0];
   logic [31:0] conv2d1x1_num_groups [2:0];
   logic [31:0] conv2d1x1_local_size [2:0];
   logic [63:0] conv2d1x1_global_offset [2:0];
   logic [31:0] conv2d1x1_work_dim;
   logic [31:0] conv2d1x1_wg_size;
   logic [0:0] conv2d1x1_wg_disp_stall_in;
   logic [0:0] conv2d1x1_wg_disp_stall_in_lookahead;
   logic [0:0] conv2d1x1_wg_disp_valid_out;
   logic conv2d1x1_wg_disp_start_out;
   logic [31:0] conv2d1x1_wg_disp_group_id_out [2:0];
   logic [31:0] conv2d1x1_wg_disp_global_id_base_out [2:0];
   logic conv2d1x1_wg_disp_dispatched_all_groups;
   logic [63:0] conv2d1x1_global_id [1][2:0];
   logic [31:0] conv2d1x1_local_id [1][2:0];
   logic [31:0] conv2d1x1_group_id [1][2:0];
   logic [0:0] conv2d1x1_pending_write;
   logic [0:0] conv2d1x1_lsu_active;
   logic [0:0] conv2d1x1_valid_in;
   logic [0:0] conv2d1x1_valid_out;
   logic [0:0] conv2d1x1_stall_in;
   logic [0:0] conv2d1x1_stall_out;
   logic conv2d1x1_cra_pending_write;
   logic conv2d1x1_cra_lsu_active;
   logic conv2d1x1_cra_valid_in;
   logic [319:0] conv2d1x1_kernel_arguments;

   assign conv2d1x1_start_chain[0] = conv2d1x1_start;
   assign conv2d1x1_finish_chain[0] = 1'b1;
   assign conv2d1x1_cra_pending_write = |conv2d1x1_pending_write;
   assign conv2d1x1_cra_lsu_active = |conv2d1x1_lsu_active;
   assign conv2d1x1_cra_valid_in = |conv2d1x1_valid_in;
   assign conv2d1x1_stall_in = 0;
   // INST conv2d1x1_workgroup_dispatcher of acl_work_group_dispatcher
   acl_work_group_dispatcher
   #(
      .WIDTH(32),
      .NUM_COPIES(1),
      .RUN_FOREVER(0),
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0),
      .HYPER_PIPELINE(0)
   )
   conv2d1x1_workgroup_dispatcher
   (
      .clock(clock),
      .resetn(resetn),
      .start(conv2d1x1_start),
      .num_groups(conv2d1x1_num_groups),
      .local_size(conv2d1x1_local_size),
      .stall_in(conv2d1x1_wg_disp_stall_in),
      .stall_in_lookahead(conv2d1x1_wg_disp_stall_in_lookahead),
      .valid_out(conv2d1x1_wg_disp_valid_out),
      .group_id_out(conv2d1x1_wg_disp_group_id_out),
      .global_id_base_out(conv2d1x1_wg_disp_global_id_base_out),
      .start_out(conv2d1x1_wg_disp_start_out),
      .dispatched_all_groups(conv2d1x1_wg_disp_dispatched_all_groups)
   );

   // INST conv2d1x1_finish_detector of acl_kernel_finish_detector
   acl_kernel_finish_detector
   #(
      .NUM_COPIES(1),
      .WG_SIZE_W(32),
      .GLOBAL_ID_W(32),
      .TESSELLATION_SIZE(19),
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0),
      .HYPER_PIPELINE(0)
   )
   conv2d1x1_finish_detector
   (
      .clock(clock),
      .resetn(resetn),
      .start(conv2d1x1_start),
      .wg_size(conv2d1x1_wg_size),
      .wg_dispatch_valid_out(conv2d1x1_wg_disp_valid_out),
      .wg_dispatch_stall_in(conv2d1x1_wg_disp_stall_in),
      .dispatched_all_groups(conv2d1x1_wg_disp_dispatched_all_groups),
      .kernel_copy_valid_out(conv2d1x1_valid_out),
      .kernel_copy_stall_in(conv2d1x1_stall_in),
      .pending_writes(conv2d1x1_cra_pending_write),
      .finish(conv2d1x1_finish)
   );

   // INST conv2d1x1_cra_slave_inst of conv2d1x1_function_cra_slave
   conv2d1x1_function_cra_slave conv2d1x1_cra_slave_inst
   (
      .clock(clock),
      .resetn(resetn),
      .start(conv2d1x1_start),
      .finish(conv2d1x1_finish),
      .global_offset_0(conv2d1x1_global_offset[0]),
      .global_offset_1(conv2d1x1_global_offset[1]),
      .global_offset_2(conv2d1x1_global_offset[2]),
      .work_dim(conv2d1x1_work_dim),
      .has_a_lsu_active(conv2d1x1_cra_lsu_active),
      .has_a_write_pending(conv2d1x1_cra_pending_write),
      .valid_in(conv2d1x1_cra_valid_in),
      .global_size_0(conv2d1x1_global_size[0]),
      .global_size_1(conv2d1x1_global_size[1]),
      .global_size_2(conv2d1x1_global_size[2]),
      .num_groups_0(conv2d1x1_num_groups[0]),
      .num_groups_1(conv2d1x1_num_groups[1]),
      .num_groups_2(conv2d1x1_num_groups[2]),
      .local_size_0(conv2d1x1_local_size[0]),
      .local_size_1(conv2d1x1_local_size[1]),
      .local_size_2(conv2d1x1_local_size[2]),
      .workgroup_size(conv2d1x1_wg_size),
      .kernel_arguments(conv2d1x1_kernel_arguments),
      .cra_irq(cra_irq_conv2d1x1),
      // AVS avs_cra
      .avs_cra_enable(avs_conv2d1x1_cra_enable),
      .avs_cra_read(avs_conv2d1x1_cra_read),
      .avs_cra_write(avs_conv2d1x1_cra_write),
      .avs_cra_address(avs_conv2d1x1_cra_address),
      .avs_cra_writedata(avs_conv2d1x1_cra_writedata),
      .avs_cra_byteenable(avs_conv2d1x1_cra_byteenable),
      .avs_cra_readdata(avs_conv2d1x1_cra_readdata),
      .avs_cra_readdatavalid(avs_conv2d1x1_cra_readdatavalid)
   );

   // INST conv2d1x1_id_iter_inst_0 of acl_id_iterator
   acl_id_iterator
   #(
      .WIDTH(32),
      .LOCAL_WIDTH_X(32),
      .LOCAL_WIDTH_Y(32),
      .LOCAL_WIDTH_Z(32),
      .STALL_OUT_LOOKAHEAD_COUNT(1),
      .VALID_OUT_LOOKAHEAD_COUNT(3),
      .ENABLE_TESSELLATION(1),
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0),
      .HYPER_PIPELINE(0),
      .USE_GLOBAL_WORK_OFFSET(1)
   )
   conv2d1x1_id_iter_inst_0
   (
      .clock(clock),
      .resetn(resetn),
      .start(conv2d1x1_wg_disp_start_out),
      .valid_in(conv2d1x1_wg_disp_valid_out[0]),
      .stall_out(conv2d1x1_wg_disp_stall_in[0]),
      .stall_out_lookahead(conv2d1x1_wg_disp_stall_in_lookahead[0]),
      .stall_in(conv2d1x1_stall_out[0]),
      .valid_out(conv2d1x1_valid_in[0]),
      .group_id_in(conv2d1x1_wg_disp_group_id_out),
      .global_id_base_in(conv2d1x1_wg_disp_global_id_base_out),
      .local_size(conv2d1x1_local_size),
      .global_size(conv2d1x1_global_size),
      .global_work_offset(conv2d1x1_global_offset),
      .local_id(conv2d1x1_local_id[0]),
      .global_id(conv2d1x1_global_id[0]),
      .group_id(conv2d1x1_group_id[0])
   );

   // INST conv2d1x1_inst_0 of conv2d1x1_top_wrapper_0
   conv2d1x1_top_wrapper_0 conv2d1x1_inst_0
   (
      .start(conv2d1x1_start_kernel_copy[0]),
      .kernel_arguments(conv2d1x1_kernel_arguments),
      .work_dim(conv2d1x1_work_dim),
      .global_offset(conv2d1x1_global_offset),
      .kernel_valid_out(conv2d1x1_valid_out[0]),
      .has_a_write_pending(conv2d1x1_pending_write[0]),
      .has_a_lsu_active(conv2d1x1_lsu_active[0]),
      .global_id(conv2d1x1_global_id[0]),
      .local_id(conv2d1x1_local_id[0]),
      .group_id(conv2d1x1_group_id[0]),
      .global_size(conv2d1x1_global_size),
      .local_size(conv2d1x1_local_size),
      .num_groups(conv2d1x1_num_groups),
      .workgroup_size(conv2d1x1_wg_size),
      .kernel_stall_out(conv2d1x1_stall_out[0]),
      .kernel_valid_in(conv2d1x1_valid_in[0]),
      .clock(clock),
      .resetn(resetn),
      .clock2x(clock2x),
      // AVM avm_lm11_conv2d1x1
      .avm_lm11_conv2d1x1_enable(conv2d1x1_0_avm_lm11_conv2d1x1_enable),
      .avm_lm11_conv2d1x1_read(conv2d1x1_0_avm_lm11_conv2d1x1_read),
      .avm_lm11_conv2d1x1_write(conv2d1x1_0_avm_lm11_conv2d1x1_write),
      .avm_lm11_conv2d1x1_address(conv2d1x1_0_avm_lm11_conv2d1x1_address),
      .avm_lm11_conv2d1x1_writedata(conv2d1x1_0_avm_lm11_conv2d1x1_writedata),
      .avm_lm11_conv2d1x1_byteenable(conv2d1x1_0_avm_lm11_conv2d1x1_byteenable),
      .avm_lm11_conv2d1x1_waitrequest(conv2d1x1_0_avm_lm11_conv2d1x1_waitrequest),
      .avm_lm11_conv2d1x1_readdata(conv2d1x1_0_avm_lm11_conv2d1x1_readdata),
      .avm_lm11_conv2d1x1_readdatavalid(conv2d1x1_0_avm_lm11_conv2d1x1_readdatavalid),
      .avm_lm11_conv2d1x1_burstcount(conv2d1x1_0_avm_lm11_conv2d1x1_burstcount),
      .avm_lm11_conv2d1x1_writeack(conv2d1x1_0_avm_lm11_conv2d1x1_writeack),
      // AVM avm_lm12_conv2d1x1
      .avm_lm12_conv2d1x1_enable(conv2d1x1_0_avm_lm12_conv2d1x1_enable),
      .avm_lm12_conv2d1x1_read(conv2d1x1_0_avm_lm12_conv2d1x1_read),
      .avm_lm12_conv2d1x1_write(conv2d1x1_0_avm_lm12_conv2d1x1_write),
      .avm_lm12_conv2d1x1_address(conv2d1x1_0_avm_lm12_conv2d1x1_address),
      .avm_lm12_conv2d1x1_writedata(conv2d1x1_0_avm_lm12_conv2d1x1_writedata),
      .avm_lm12_conv2d1x1_byteenable(conv2d1x1_0_avm_lm12_conv2d1x1_byteenable),
      .avm_lm12_conv2d1x1_waitrequest(conv2d1x1_0_avm_lm12_conv2d1x1_waitrequest),
      .avm_lm12_conv2d1x1_readdata(conv2d1x1_0_avm_lm12_conv2d1x1_readdata),
      .avm_lm12_conv2d1x1_readdatavalid(conv2d1x1_0_avm_lm12_conv2d1x1_readdatavalid),
      .avm_lm12_conv2d1x1_burstcount(conv2d1x1_0_avm_lm12_conv2d1x1_burstcount),
      .avm_lm12_conv2d1x1_writeack(conv2d1x1_0_avm_lm12_conv2d1x1_writeack),
      // AVM avm_lm14_conv2d1x1
      .avm_lm14_conv2d1x1_enable(conv2d1x1_0_avm_lm14_conv2d1x1_enable),
      .avm_lm14_conv2d1x1_read(conv2d1x1_0_avm_lm14_conv2d1x1_read),
      .avm_lm14_conv2d1x1_write(conv2d1x1_0_avm_lm14_conv2d1x1_write),
      .avm_lm14_conv2d1x1_address(conv2d1x1_0_avm_lm14_conv2d1x1_address),
      .avm_lm14_conv2d1x1_writedata(conv2d1x1_0_avm_lm14_conv2d1x1_writedata),
      .avm_lm14_conv2d1x1_byteenable(conv2d1x1_0_avm_lm14_conv2d1x1_byteenable),
      .avm_lm14_conv2d1x1_waitrequest(conv2d1x1_0_avm_lm14_conv2d1x1_waitrequest),
      .avm_lm14_conv2d1x1_readdata(conv2d1x1_0_avm_lm14_conv2d1x1_readdata),
      .avm_lm14_conv2d1x1_readdatavalid(conv2d1x1_0_avm_lm14_conv2d1x1_readdatavalid),
      .avm_lm14_conv2d1x1_burstcount(conv2d1x1_0_avm_lm14_conv2d1x1_burstcount),
      .avm_lm14_conv2d1x1_writeack(conv2d1x1_0_avm_lm14_conv2d1x1_writeack),
      // AVM avm_lm16_conv2d1x1
      .avm_lm16_conv2d1x1_enable(conv2d1x1_0_avm_lm16_conv2d1x1_enable),
      .avm_lm16_conv2d1x1_read(conv2d1x1_0_avm_lm16_conv2d1x1_read),
      .avm_lm16_conv2d1x1_write(conv2d1x1_0_avm_lm16_conv2d1x1_write),
      .avm_lm16_conv2d1x1_address(conv2d1x1_0_avm_lm16_conv2d1x1_address),
      .avm_lm16_conv2d1x1_writedata(conv2d1x1_0_avm_lm16_conv2d1x1_writedata),
      .avm_lm16_conv2d1x1_byteenable(conv2d1x1_0_avm_lm16_conv2d1x1_byteenable),
      .avm_lm16_conv2d1x1_waitrequest(conv2d1x1_0_avm_lm16_conv2d1x1_waitrequest),
      .avm_lm16_conv2d1x1_readdata(conv2d1x1_0_avm_lm16_conv2d1x1_readdata),
      .avm_lm16_conv2d1x1_readdatavalid(conv2d1x1_0_avm_lm16_conv2d1x1_readdatavalid),
      .avm_lm16_conv2d1x1_burstcount(conv2d1x1_0_avm_lm16_conv2d1x1_burstcount),
      .avm_lm16_conv2d1x1_writeack(conv2d1x1_0_avm_lm16_conv2d1x1_writeack),
      // AVM avm_lm_conv2d1x1
      .avm_lm_conv2d1x1_enable(conv2d1x1_0_avm_lm_conv2d1x1_enable),
      .avm_lm_conv2d1x1_read(conv2d1x1_0_avm_lm_conv2d1x1_read),
      .avm_lm_conv2d1x1_write(conv2d1x1_0_avm_lm_conv2d1x1_write),
      .avm_lm_conv2d1x1_address(conv2d1x1_0_avm_lm_conv2d1x1_address),
      .avm_lm_conv2d1x1_writedata(conv2d1x1_0_avm_lm_conv2d1x1_writedata),
      .avm_lm_conv2d1x1_byteenable(conv2d1x1_0_avm_lm_conv2d1x1_byteenable),
      .avm_lm_conv2d1x1_waitrequest(conv2d1x1_0_avm_lm_conv2d1x1_waitrequest),
      .avm_lm_conv2d1x1_readdata(conv2d1x1_0_avm_lm_conv2d1x1_readdata),
      .avm_lm_conv2d1x1_readdatavalid(conv2d1x1_0_avm_lm_conv2d1x1_readdatavalid),
      .avm_lm_conv2d1x1_burstcount(conv2d1x1_0_avm_lm_conv2d1x1_burstcount),
      .avm_lm_conv2d1x1_writeack(conv2d1x1_0_avm_lm_conv2d1x1_writeack),
      // AVM avm_unnamed_conv2d1x10_conv2d1x1
      .avm_unnamed_conv2d1x10_conv2d1x1_enable(conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_enable),
      .avm_unnamed_conv2d1x10_conv2d1x1_read(conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_read),
      .avm_unnamed_conv2d1x10_conv2d1x1_write(conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_write),
      .avm_unnamed_conv2d1x10_conv2d1x1_address(conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_address),
      .avm_unnamed_conv2d1x10_conv2d1x1_writedata(conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_writedata),
      .avm_unnamed_conv2d1x10_conv2d1x1_byteenable(conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_byteenable),
      .avm_unnamed_conv2d1x10_conv2d1x1_waitrequest(conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_waitrequest),
      .avm_unnamed_conv2d1x10_conv2d1x1_readdata(conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_readdata),
      .avm_unnamed_conv2d1x10_conv2d1x1_readdatavalid(conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_readdatavalid),
      .avm_unnamed_conv2d1x10_conv2d1x1_burstcount(conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_burstcount),
      .avm_unnamed_conv2d1x10_conv2d1x1_writeack(conv2d1x1_0_avm_unnamed_conv2d1x10_conv2d1x1_writeack),
      // AVM avm_unnamed_conv2d1x15_conv2d1x1
      .avm_unnamed_conv2d1x15_conv2d1x1_enable(conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_enable),
      .avm_unnamed_conv2d1x15_conv2d1x1_read(conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_read),
      .avm_unnamed_conv2d1x15_conv2d1x1_write(conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_write),
      .avm_unnamed_conv2d1x15_conv2d1x1_address(conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_address),
      .avm_unnamed_conv2d1x15_conv2d1x1_writedata(conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_writedata),
      .avm_unnamed_conv2d1x15_conv2d1x1_byteenable(conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_byteenable),
      .avm_unnamed_conv2d1x15_conv2d1x1_waitrequest(conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_waitrequest),
      .avm_unnamed_conv2d1x15_conv2d1x1_readdata(conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_readdata),
      .avm_unnamed_conv2d1x15_conv2d1x1_readdatavalid(conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_readdatavalid),
      .avm_unnamed_conv2d1x15_conv2d1x1_burstcount(conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_burstcount),
      .avm_unnamed_conv2d1x15_conv2d1x1_writeack(conv2d1x1_0_avm_unnamed_conv2d1x15_conv2d1x1_writeack)
   );

   // INST conv2d1x1_start_elem_inst_0 of acl_start_signal_chain_element
   acl_start_signal_chain_element
   #(
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0)
   )
   conv2d1x1_start_elem_inst_0
   (
      .clock(clock),
      .resetn(resetn),
      .start_in(conv2d1x1_start_chain[0]),
      .start_kernel(conv2d1x1_start_kernel_copy[0]),
      .start_finish_detector(conv2d1x1_start_task_fd[0]),
      .start_finish_chain_element(conv2d1x1_start_finish_element[0]),
      .start_chain()
   );

endmodule

/////////////////////////////////////////////////////////////////
// MODULE conv2d3x3_std_ic_partition_wrapper
/////////////////////////////////////////////////////////////////
module conv2d3x3_std_ic_partition_wrapper
(
   input logic clock,
   input logic clock2x,
   input logic resetn,
   output logic cra_irq_conv2d3x3,
   // AVS avs_conv2d3x3_cra
   input logic avs_conv2d3x3_cra_enable,
   input logic avs_conv2d3x3_cra_read,
   input logic avs_conv2d3x3_cra_write,
   input logic [4:0] avs_conv2d3x3_cra_address,
   input logic [63:0] avs_conv2d3x3_cra_writedata,
   input logic [7:0] avs_conv2d3x3_cra_byteenable,
   output logic [63:0] avs_conv2d3x3_cra_readdata,
   output logic avs_conv2d3x3_cra_readdatavalid,
   // AVM conv2d3x3_0_avm_lm13_conv2d3x3
   output logic conv2d3x3_0_avm_lm13_conv2d3x3_enable,
   output logic conv2d3x3_0_avm_lm13_conv2d3x3_read,
   output logic conv2d3x3_0_avm_lm13_conv2d3x3_write,
   output logic [30:0] conv2d3x3_0_avm_lm13_conv2d3x3_address,
   output logic [511:0] conv2d3x3_0_avm_lm13_conv2d3x3_writedata,
   output logic [63:0] conv2d3x3_0_avm_lm13_conv2d3x3_byteenable,
   input logic conv2d3x3_0_avm_lm13_conv2d3x3_waitrequest,
   input logic [511:0] conv2d3x3_0_avm_lm13_conv2d3x3_readdata,
   input logic conv2d3x3_0_avm_lm13_conv2d3x3_readdatavalid,
   output logic [4:0] conv2d3x3_0_avm_lm13_conv2d3x3_burstcount,
   input logic conv2d3x3_0_avm_lm13_conv2d3x3_writeack,
   // AVM conv2d3x3_0_avm_lm18_conv2d3x3
   output logic conv2d3x3_0_avm_lm18_conv2d3x3_enable,
   output logic conv2d3x3_0_avm_lm18_conv2d3x3_read,
   output logic conv2d3x3_0_avm_lm18_conv2d3x3_write,
   output logic [30:0] conv2d3x3_0_avm_lm18_conv2d3x3_address,
   output logic [511:0] conv2d3x3_0_avm_lm18_conv2d3x3_writedata,
   output logic [63:0] conv2d3x3_0_avm_lm18_conv2d3x3_byteenable,
   input logic conv2d3x3_0_avm_lm18_conv2d3x3_waitrequest,
   input logic [511:0] conv2d3x3_0_avm_lm18_conv2d3x3_readdata,
   input logic conv2d3x3_0_avm_lm18_conv2d3x3_readdatavalid,
   output logic [4:0] conv2d3x3_0_avm_lm18_conv2d3x3_burstcount,
   input logic conv2d3x3_0_avm_lm18_conv2d3x3_writeack,
   // AVM conv2d3x3_0_avm_lm20_conv2d3x3
   output logic conv2d3x3_0_avm_lm20_conv2d3x3_enable,
   output logic conv2d3x3_0_avm_lm20_conv2d3x3_read,
   output logic conv2d3x3_0_avm_lm20_conv2d3x3_write,
   output logic [30:0] conv2d3x3_0_avm_lm20_conv2d3x3_address,
   output logic [511:0] conv2d3x3_0_avm_lm20_conv2d3x3_writedata,
   output logic [63:0] conv2d3x3_0_avm_lm20_conv2d3x3_byteenable,
   input logic conv2d3x3_0_avm_lm20_conv2d3x3_waitrequest,
   input logic [511:0] conv2d3x3_0_avm_lm20_conv2d3x3_readdata,
   input logic conv2d3x3_0_avm_lm20_conv2d3x3_readdatavalid,
   output logic [4:0] conv2d3x3_0_avm_lm20_conv2d3x3_burstcount,
   input logic conv2d3x3_0_avm_lm20_conv2d3x3_writeack,
   // AVM conv2d3x3_0_avm_lm25_conv2d3x3
   output logic conv2d3x3_0_avm_lm25_conv2d3x3_enable,
   output logic conv2d3x3_0_avm_lm25_conv2d3x3_read,
   output logic conv2d3x3_0_avm_lm25_conv2d3x3_write,
   output logic [30:0] conv2d3x3_0_avm_lm25_conv2d3x3_address,
   output logic [511:0] conv2d3x3_0_avm_lm25_conv2d3x3_writedata,
   output logic [63:0] conv2d3x3_0_avm_lm25_conv2d3x3_byteenable,
   input logic conv2d3x3_0_avm_lm25_conv2d3x3_waitrequest,
   input logic [511:0] conv2d3x3_0_avm_lm25_conv2d3x3_readdata,
   input logic conv2d3x3_0_avm_lm25_conv2d3x3_readdatavalid,
   output logic [4:0] conv2d3x3_0_avm_lm25_conv2d3x3_burstcount,
   input logic conv2d3x3_0_avm_lm25_conv2d3x3_writeack,
   // AVM conv2d3x3_0_avm_lm27_conv2d3x3
   output logic conv2d3x3_0_avm_lm27_conv2d3x3_enable,
   output logic conv2d3x3_0_avm_lm27_conv2d3x3_read,
   output logic conv2d3x3_0_avm_lm27_conv2d3x3_write,
   output logic [30:0] conv2d3x3_0_avm_lm27_conv2d3x3_address,
   output logic [511:0] conv2d3x3_0_avm_lm27_conv2d3x3_writedata,
   output logic [63:0] conv2d3x3_0_avm_lm27_conv2d3x3_byteenable,
   input logic conv2d3x3_0_avm_lm27_conv2d3x3_waitrequest,
   input logic [511:0] conv2d3x3_0_avm_lm27_conv2d3x3_readdata,
   input logic conv2d3x3_0_avm_lm27_conv2d3x3_readdatavalid,
   output logic [4:0] conv2d3x3_0_avm_lm27_conv2d3x3_burstcount,
   input logic conv2d3x3_0_avm_lm27_conv2d3x3_writeack,
   // AVM conv2d3x3_0_avm_lm_conv2d3x3
   output logic conv2d3x3_0_avm_lm_conv2d3x3_enable,
   output logic conv2d3x3_0_avm_lm_conv2d3x3_read,
   output logic conv2d3x3_0_avm_lm_conv2d3x3_write,
   output logic [30:0] conv2d3x3_0_avm_lm_conv2d3x3_address,
   output logic [511:0] conv2d3x3_0_avm_lm_conv2d3x3_writedata,
   output logic [63:0] conv2d3x3_0_avm_lm_conv2d3x3_byteenable,
   input logic conv2d3x3_0_avm_lm_conv2d3x3_waitrequest,
   input logic [511:0] conv2d3x3_0_avm_lm_conv2d3x3_readdata,
   input logic conv2d3x3_0_avm_lm_conv2d3x3_readdatavalid,
   output logic [4:0] conv2d3x3_0_avm_lm_conv2d3x3_burstcount,
   input logic conv2d3x3_0_avm_lm_conv2d3x3_writeack,
   // AVM conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3
   output logic conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_enable,
   output logic conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_read,
   output logic conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_write,
   output logic [30:0] conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_address,
   output logic [511:0] conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_writedata,
   output logic [63:0] conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_byteenable,
   input logic conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_waitrequest,
   input logic [511:0] conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_readdata,
   input logic conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_readdatavalid,
   output logic [4:0] conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_burstcount,
   input logic conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_writeack,
   // AVM conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3
   output logic conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_enable,
   output logic conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_read,
   output logic conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_write,
   output logic [30:0] conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_address,
   output logic [511:0] conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_writedata,
   output logic [63:0] conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_byteenable,
   input logic conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_waitrequest,
   input logic [511:0] conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_readdata,
   input logic conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_readdatavalid,
   output logic [4:0] conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_burstcount,
   input logic conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_writeack
);
   logic conv2d3x3_start;
   logic [0:0] conv2d3x3_start_chain;
   logic [0:0] conv2d3x3_start_kernel_copy;
   logic [0:0] conv2d3x3_start_task_fd;
   logic [0:0] conv2d3x3_start_finish_element;
   logic conv2d3x3_finish;
   logic [0:0] conv2d3x3_finish_kernel_copy;
   logic [0:0] conv2d3x3_finish_chain;
   logic [63:0] conv2d3x3_global_size [2:0];
   logic [31:0] conv2d3x3_num_groups [2:0];
   logic [31:0] conv2d3x3_local_size [2:0];
   logic [63:0] conv2d3x3_global_offset [2:0];
   logic [31:0] conv2d3x3_work_dim;
   logic [31:0] conv2d3x3_wg_size;
   logic [0:0] conv2d3x3_wg_disp_stall_in;
   logic [0:0] conv2d3x3_wg_disp_stall_in_lookahead;
   logic [0:0] conv2d3x3_wg_disp_valid_out;
   logic conv2d3x3_wg_disp_start_out;
   logic [31:0] conv2d3x3_wg_disp_group_id_out [2:0];
   logic [31:0] conv2d3x3_wg_disp_global_id_base_out [2:0];
   logic conv2d3x3_wg_disp_dispatched_all_groups;
   logic [63:0] conv2d3x3_global_id [1][2:0];
   logic [31:0] conv2d3x3_local_id [1][2:0];
   logic [31:0] conv2d3x3_group_id [1][2:0];
   logic [0:0] conv2d3x3_pending_write;
   logic [0:0] conv2d3x3_lsu_active;
   logic [0:0] conv2d3x3_valid_in;
   logic [0:0] conv2d3x3_valid_out;
   logic [0:0] conv2d3x3_stall_in;
   logic [0:0] conv2d3x3_stall_out;
   logic conv2d3x3_cra_pending_write;
   logic conv2d3x3_cra_lsu_active;
   logic conv2d3x3_cra_valid_in;
   logic [447:0] conv2d3x3_kernel_arguments;

   assign conv2d3x3_start_chain[0] = conv2d3x3_start;
   assign conv2d3x3_finish_chain[0] = 1'b1;
   assign conv2d3x3_cra_pending_write = |conv2d3x3_pending_write;
   assign conv2d3x3_cra_lsu_active = |conv2d3x3_lsu_active;
   assign conv2d3x3_cra_valid_in = |conv2d3x3_valid_in;
   assign conv2d3x3_stall_in = 0;
   // INST conv2d3x3_workgroup_dispatcher of acl_work_group_dispatcher
   acl_work_group_dispatcher
   #(
      .WIDTH(32),
      .NUM_COPIES(1),
      .RUN_FOREVER(0),
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0),
      .HYPER_PIPELINE(0)
   )
   conv2d3x3_workgroup_dispatcher
   (
      .clock(clock),
      .resetn(resetn),
      .start(conv2d3x3_start),
      .num_groups(conv2d3x3_num_groups),
      .local_size(conv2d3x3_local_size),
      .stall_in(conv2d3x3_wg_disp_stall_in),
      .stall_in_lookahead(conv2d3x3_wg_disp_stall_in_lookahead),
      .valid_out(conv2d3x3_wg_disp_valid_out),
      .group_id_out(conv2d3x3_wg_disp_group_id_out),
      .global_id_base_out(conv2d3x3_wg_disp_global_id_base_out),
      .start_out(conv2d3x3_wg_disp_start_out),
      .dispatched_all_groups(conv2d3x3_wg_disp_dispatched_all_groups)
   );

   // INST conv2d3x3_finish_detector of acl_kernel_finish_detector
   acl_kernel_finish_detector
   #(
      .NUM_COPIES(1),
      .WG_SIZE_W(32),
      .GLOBAL_ID_W(32),
      .TESSELLATION_SIZE(19),
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0),
      .HYPER_PIPELINE(0)
   )
   conv2d3x3_finish_detector
   (
      .clock(clock),
      .resetn(resetn),
      .start(conv2d3x3_start),
      .wg_size(conv2d3x3_wg_size),
      .wg_dispatch_valid_out(conv2d3x3_wg_disp_valid_out),
      .wg_dispatch_stall_in(conv2d3x3_wg_disp_stall_in),
      .dispatched_all_groups(conv2d3x3_wg_disp_dispatched_all_groups),
      .kernel_copy_valid_out(conv2d3x3_valid_out),
      .kernel_copy_stall_in(conv2d3x3_stall_in),
      .pending_writes(conv2d3x3_cra_pending_write),
      .finish(conv2d3x3_finish)
   );

   // INST conv2d3x3_cra_slave_inst of conv2d3x3_function_cra_slave
   conv2d3x3_function_cra_slave conv2d3x3_cra_slave_inst
   (
      .clock(clock),
      .resetn(resetn),
      .start(conv2d3x3_start),
      .finish(conv2d3x3_finish),
      .global_offset_0(conv2d3x3_global_offset[0]),
      .global_offset_1(conv2d3x3_global_offset[1]),
      .global_offset_2(conv2d3x3_global_offset[2]),
      .work_dim(conv2d3x3_work_dim),
      .has_a_lsu_active(conv2d3x3_cra_lsu_active),
      .has_a_write_pending(conv2d3x3_cra_pending_write),
      .valid_in(conv2d3x3_cra_valid_in),
      .global_size_0(conv2d3x3_global_size[0]),
      .global_size_1(conv2d3x3_global_size[1]),
      .global_size_2(conv2d3x3_global_size[2]),
      .num_groups_0(conv2d3x3_num_groups[0]),
      .num_groups_1(conv2d3x3_num_groups[1]),
      .num_groups_2(conv2d3x3_num_groups[2]),
      .local_size_0(conv2d3x3_local_size[0]),
      .local_size_1(conv2d3x3_local_size[1]),
      .local_size_2(conv2d3x3_local_size[2]),
      .workgroup_size(conv2d3x3_wg_size),
      .kernel_arguments(conv2d3x3_kernel_arguments),
      .cra_irq(cra_irq_conv2d3x3),
      // AVS avs_cra
      .avs_cra_enable(avs_conv2d3x3_cra_enable),
      .avs_cra_read(avs_conv2d3x3_cra_read),
      .avs_cra_write(avs_conv2d3x3_cra_write),
      .avs_cra_address(avs_conv2d3x3_cra_address),
      .avs_cra_writedata(avs_conv2d3x3_cra_writedata),
      .avs_cra_byteenable(avs_conv2d3x3_cra_byteenable),
      .avs_cra_readdata(avs_conv2d3x3_cra_readdata),
      .avs_cra_readdatavalid(avs_conv2d3x3_cra_readdatavalid)
   );

   // INST conv2d3x3_id_iter_inst_0 of acl_id_iterator
   acl_id_iterator
   #(
      .WIDTH(32),
      .LOCAL_WIDTH_X(32),
      .LOCAL_WIDTH_Y(32),
      .LOCAL_WIDTH_Z(32),
      .STALL_OUT_LOOKAHEAD_COUNT(1),
      .VALID_OUT_LOOKAHEAD_COUNT(3),
      .ENABLE_TESSELLATION(1),
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0),
      .HYPER_PIPELINE(0),
      .USE_GLOBAL_WORK_OFFSET(1)
   )
   conv2d3x3_id_iter_inst_0
   (
      .clock(clock),
      .resetn(resetn),
      .start(conv2d3x3_wg_disp_start_out),
      .valid_in(conv2d3x3_wg_disp_valid_out[0]),
      .stall_out(conv2d3x3_wg_disp_stall_in[0]),
      .stall_out_lookahead(conv2d3x3_wg_disp_stall_in_lookahead[0]),
      .stall_in(conv2d3x3_stall_out[0]),
      .valid_out(conv2d3x3_valid_in[0]),
      .group_id_in(conv2d3x3_wg_disp_group_id_out),
      .global_id_base_in(conv2d3x3_wg_disp_global_id_base_out),
      .local_size(conv2d3x3_local_size),
      .global_size(conv2d3x3_global_size),
      .global_work_offset(conv2d3x3_global_offset),
      .local_id(conv2d3x3_local_id[0]),
      .global_id(conv2d3x3_global_id[0]),
      .group_id(conv2d3x3_group_id[0])
   );

   // INST conv2d3x3_inst_0 of conv2d3x3_top_wrapper_0
   conv2d3x3_top_wrapper_0 conv2d3x3_inst_0
   (
      .start(conv2d3x3_start_kernel_copy[0]),
      .kernel_arguments(conv2d3x3_kernel_arguments),
      .work_dim(conv2d3x3_work_dim),
      .global_offset(conv2d3x3_global_offset),
      .kernel_valid_out(conv2d3x3_valid_out[0]),
      .has_a_write_pending(conv2d3x3_pending_write[0]),
      .has_a_lsu_active(conv2d3x3_lsu_active[0]),
      .global_id(conv2d3x3_global_id[0]),
      .local_id(conv2d3x3_local_id[0]),
      .group_id(conv2d3x3_group_id[0]),
      .global_size(conv2d3x3_global_size),
      .local_size(conv2d3x3_local_size),
      .num_groups(conv2d3x3_num_groups),
      .workgroup_size(conv2d3x3_wg_size),
      .kernel_stall_out(conv2d3x3_stall_out[0]),
      .kernel_valid_in(conv2d3x3_valid_in[0]),
      .clock(clock),
      .resetn(resetn),
      .clock2x(clock2x),
      // AVM avm_lm13_conv2d3x3
      .avm_lm13_conv2d3x3_enable(conv2d3x3_0_avm_lm13_conv2d3x3_enable),
      .avm_lm13_conv2d3x3_read(conv2d3x3_0_avm_lm13_conv2d3x3_read),
      .avm_lm13_conv2d3x3_write(conv2d3x3_0_avm_lm13_conv2d3x3_write),
      .avm_lm13_conv2d3x3_address(conv2d3x3_0_avm_lm13_conv2d3x3_address),
      .avm_lm13_conv2d3x3_writedata(conv2d3x3_0_avm_lm13_conv2d3x3_writedata),
      .avm_lm13_conv2d3x3_byteenable(conv2d3x3_0_avm_lm13_conv2d3x3_byteenable),
      .avm_lm13_conv2d3x3_waitrequest(conv2d3x3_0_avm_lm13_conv2d3x3_waitrequest),
      .avm_lm13_conv2d3x3_readdata(conv2d3x3_0_avm_lm13_conv2d3x3_readdata),
      .avm_lm13_conv2d3x3_readdatavalid(conv2d3x3_0_avm_lm13_conv2d3x3_readdatavalid),
      .avm_lm13_conv2d3x3_burstcount(conv2d3x3_0_avm_lm13_conv2d3x3_burstcount),
      .avm_lm13_conv2d3x3_writeack(conv2d3x3_0_avm_lm13_conv2d3x3_writeack),
      // AVM avm_lm18_conv2d3x3
      .avm_lm18_conv2d3x3_enable(conv2d3x3_0_avm_lm18_conv2d3x3_enable),
      .avm_lm18_conv2d3x3_read(conv2d3x3_0_avm_lm18_conv2d3x3_read),
      .avm_lm18_conv2d3x3_write(conv2d3x3_0_avm_lm18_conv2d3x3_write),
      .avm_lm18_conv2d3x3_address(conv2d3x3_0_avm_lm18_conv2d3x3_address),
      .avm_lm18_conv2d3x3_writedata(conv2d3x3_0_avm_lm18_conv2d3x3_writedata),
      .avm_lm18_conv2d3x3_byteenable(conv2d3x3_0_avm_lm18_conv2d3x3_byteenable),
      .avm_lm18_conv2d3x3_waitrequest(conv2d3x3_0_avm_lm18_conv2d3x3_waitrequest),
      .avm_lm18_conv2d3x3_readdata(conv2d3x3_0_avm_lm18_conv2d3x3_readdata),
      .avm_lm18_conv2d3x3_readdatavalid(conv2d3x3_0_avm_lm18_conv2d3x3_readdatavalid),
      .avm_lm18_conv2d3x3_burstcount(conv2d3x3_0_avm_lm18_conv2d3x3_burstcount),
      .avm_lm18_conv2d3x3_writeack(conv2d3x3_0_avm_lm18_conv2d3x3_writeack),
      // AVM avm_lm20_conv2d3x3
      .avm_lm20_conv2d3x3_enable(conv2d3x3_0_avm_lm20_conv2d3x3_enable),
      .avm_lm20_conv2d3x3_read(conv2d3x3_0_avm_lm20_conv2d3x3_read),
      .avm_lm20_conv2d3x3_write(conv2d3x3_0_avm_lm20_conv2d3x3_write),
      .avm_lm20_conv2d3x3_address(conv2d3x3_0_avm_lm20_conv2d3x3_address),
      .avm_lm20_conv2d3x3_writedata(conv2d3x3_0_avm_lm20_conv2d3x3_writedata),
      .avm_lm20_conv2d3x3_byteenable(conv2d3x3_0_avm_lm20_conv2d3x3_byteenable),
      .avm_lm20_conv2d3x3_waitrequest(conv2d3x3_0_avm_lm20_conv2d3x3_waitrequest),
      .avm_lm20_conv2d3x3_readdata(conv2d3x3_0_avm_lm20_conv2d3x3_readdata),
      .avm_lm20_conv2d3x3_readdatavalid(conv2d3x3_0_avm_lm20_conv2d3x3_readdatavalid),
      .avm_lm20_conv2d3x3_burstcount(conv2d3x3_0_avm_lm20_conv2d3x3_burstcount),
      .avm_lm20_conv2d3x3_writeack(conv2d3x3_0_avm_lm20_conv2d3x3_writeack),
      // AVM avm_lm25_conv2d3x3
      .avm_lm25_conv2d3x3_enable(conv2d3x3_0_avm_lm25_conv2d3x3_enable),
      .avm_lm25_conv2d3x3_read(conv2d3x3_0_avm_lm25_conv2d3x3_read),
      .avm_lm25_conv2d3x3_write(conv2d3x3_0_avm_lm25_conv2d3x3_write),
      .avm_lm25_conv2d3x3_address(conv2d3x3_0_avm_lm25_conv2d3x3_address),
      .avm_lm25_conv2d3x3_writedata(conv2d3x3_0_avm_lm25_conv2d3x3_writedata),
      .avm_lm25_conv2d3x3_byteenable(conv2d3x3_0_avm_lm25_conv2d3x3_byteenable),
      .avm_lm25_conv2d3x3_waitrequest(conv2d3x3_0_avm_lm25_conv2d3x3_waitrequest),
      .avm_lm25_conv2d3x3_readdata(conv2d3x3_0_avm_lm25_conv2d3x3_readdata),
      .avm_lm25_conv2d3x3_readdatavalid(conv2d3x3_0_avm_lm25_conv2d3x3_readdatavalid),
      .avm_lm25_conv2d3x3_burstcount(conv2d3x3_0_avm_lm25_conv2d3x3_burstcount),
      .avm_lm25_conv2d3x3_writeack(conv2d3x3_0_avm_lm25_conv2d3x3_writeack),
      // AVM avm_lm27_conv2d3x3
      .avm_lm27_conv2d3x3_enable(conv2d3x3_0_avm_lm27_conv2d3x3_enable),
      .avm_lm27_conv2d3x3_read(conv2d3x3_0_avm_lm27_conv2d3x3_read),
      .avm_lm27_conv2d3x3_write(conv2d3x3_0_avm_lm27_conv2d3x3_write),
      .avm_lm27_conv2d3x3_address(conv2d3x3_0_avm_lm27_conv2d3x3_address),
      .avm_lm27_conv2d3x3_writedata(conv2d3x3_0_avm_lm27_conv2d3x3_writedata),
      .avm_lm27_conv2d3x3_byteenable(conv2d3x3_0_avm_lm27_conv2d3x3_byteenable),
      .avm_lm27_conv2d3x3_waitrequest(conv2d3x3_0_avm_lm27_conv2d3x3_waitrequest),
      .avm_lm27_conv2d3x3_readdata(conv2d3x3_0_avm_lm27_conv2d3x3_readdata),
      .avm_lm27_conv2d3x3_readdatavalid(conv2d3x3_0_avm_lm27_conv2d3x3_readdatavalid),
      .avm_lm27_conv2d3x3_burstcount(conv2d3x3_0_avm_lm27_conv2d3x3_burstcount),
      .avm_lm27_conv2d3x3_writeack(conv2d3x3_0_avm_lm27_conv2d3x3_writeack),
      // AVM avm_lm_conv2d3x3
      .avm_lm_conv2d3x3_enable(conv2d3x3_0_avm_lm_conv2d3x3_enable),
      .avm_lm_conv2d3x3_read(conv2d3x3_0_avm_lm_conv2d3x3_read),
      .avm_lm_conv2d3x3_write(conv2d3x3_0_avm_lm_conv2d3x3_write),
      .avm_lm_conv2d3x3_address(conv2d3x3_0_avm_lm_conv2d3x3_address),
      .avm_lm_conv2d3x3_writedata(conv2d3x3_0_avm_lm_conv2d3x3_writedata),
      .avm_lm_conv2d3x3_byteenable(conv2d3x3_0_avm_lm_conv2d3x3_byteenable),
      .avm_lm_conv2d3x3_waitrequest(conv2d3x3_0_avm_lm_conv2d3x3_waitrequest),
      .avm_lm_conv2d3x3_readdata(conv2d3x3_0_avm_lm_conv2d3x3_readdata),
      .avm_lm_conv2d3x3_readdatavalid(conv2d3x3_0_avm_lm_conv2d3x3_readdatavalid),
      .avm_lm_conv2d3x3_burstcount(conv2d3x3_0_avm_lm_conv2d3x3_burstcount),
      .avm_lm_conv2d3x3_writeack(conv2d3x3_0_avm_lm_conv2d3x3_writeack),
      // AVM avm_unnamed_conv2d3x30_conv2d3x3
      .avm_unnamed_conv2d3x30_conv2d3x3_enable(conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_enable),
      .avm_unnamed_conv2d3x30_conv2d3x3_read(conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_read),
      .avm_unnamed_conv2d3x30_conv2d3x3_write(conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_write),
      .avm_unnamed_conv2d3x30_conv2d3x3_address(conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_address),
      .avm_unnamed_conv2d3x30_conv2d3x3_writedata(conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_writedata),
      .avm_unnamed_conv2d3x30_conv2d3x3_byteenable(conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_byteenable),
      .avm_unnamed_conv2d3x30_conv2d3x3_waitrequest(conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_waitrequest),
      .avm_unnamed_conv2d3x30_conv2d3x3_readdata(conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_readdata),
      .avm_unnamed_conv2d3x30_conv2d3x3_readdatavalid(conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_readdatavalid),
      .avm_unnamed_conv2d3x30_conv2d3x3_burstcount(conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_burstcount),
      .avm_unnamed_conv2d3x30_conv2d3x3_writeack(conv2d3x3_0_avm_unnamed_conv2d3x30_conv2d3x3_writeack),
      // AVM avm_unnamed_conv2d3x36_conv2d3x3
      .avm_unnamed_conv2d3x36_conv2d3x3_enable(conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_enable),
      .avm_unnamed_conv2d3x36_conv2d3x3_read(conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_read),
      .avm_unnamed_conv2d3x36_conv2d3x3_write(conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_write),
      .avm_unnamed_conv2d3x36_conv2d3x3_address(conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_address),
      .avm_unnamed_conv2d3x36_conv2d3x3_writedata(conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_writedata),
      .avm_unnamed_conv2d3x36_conv2d3x3_byteenable(conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_byteenable),
      .avm_unnamed_conv2d3x36_conv2d3x3_waitrequest(conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_waitrequest),
      .avm_unnamed_conv2d3x36_conv2d3x3_readdata(conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_readdata),
      .avm_unnamed_conv2d3x36_conv2d3x3_readdatavalid(conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_readdatavalid),
      .avm_unnamed_conv2d3x36_conv2d3x3_burstcount(conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_burstcount),
      .avm_unnamed_conv2d3x36_conv2d3x3_writeack(conv2d3x3_0_avm_unnamed_conv2d3x36_conv2d3x3_writeack)
   );

   // INST conv2d3x3_start_elem_inst_0 of acl_start_signal_chain_element
   acl_start_signal_chain_element
   #(
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0)
   )
   conv2d3x3_start_elem_inst_0
   (
      .clock(clock),
      .resetn(resetn),
      .start_in(conv2d3x3_start_chain[0]),
      .start_kernel(conv2d3x3_start_kernel_copy[0]),
      .start_finish_detector(conv2d3x3_start_task_fd[0]),
      .start_finish_chain_element(conv2d3x3_start_finish_element[0]),
      .start_chain()
   );

endmodule

/////////////////////////////////////////////////////////////////
// MODULE maxpool2d_std_ic_partition_wrapper
/////////////////////////////////////////////////////////////////
module maxpool2d_std_ic_partition_wrapper
(
   input logic clock,
   input logic clock2x,
   input logic resetn,
   output logic cra_irq_maxpool2d,
   // AVS avs_maxpool2d_cra
   input logic avs_maxpool2d_cra_enable,
   input logic avs_maxpool2d_cra_read,
   input logic avs_maxpool2d_cra_write,
   input logic [4:0] avs_maxpool2d_cra_address,
   input logic [63:0] avs_maxpool2d_cra_writedata,
   input logic [7:0] avs_maxpool2d_cra_byteenable,
   output logic [63:0] avs_maxpool2d_cra_readdata,
   output logic avs_maxpool2d_cra_readdatavalid,
   // AVM maxpool2d_0_avm_lm_maxpool2d
   output logic maxpool2d_0_avm_lm_maxpool2d_enable,
   output logic maxpool2d_0_avm_lm_maxpool2d_read,
   output logic maxpool2d_0_avm_lm_maxpool2d_write,
   output logic [30:0] maxpool2d_0_avm_lm_maxpool2d_address,
   output logic [511:0] maxpool2d_0_avm_lm_maxpool2d_writedata,
   output logic [63:0] maxpool2d_0_avm_lm_maxpool2d_byteenable,
   input logic maxpool2d_0_avm_lm_maxpool2d_waitrequest,
   input logic [511:0] maxpool2d_0_avm_lm_maxpool2d_readdata,
   input logic maxpool2d_0_avm_lm_maxpool2d_readdatavalid,
   output logic [4:0] maxpool2d_0_avm_lm_maxpool2d_burstcount,
   input logic maxpool2d_0_avm_lm_maxpool2d_writeack,
   // AVM maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d
   output logic maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_enable,
   output logic maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_read,
   output logic maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_write,
   output logic [30:0] maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_address,
   output logic [511:0] maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_writedata,
   output logic [63:0] maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_byteenable,
   input logic maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_waitrequest,
   input logic [511:0] maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_readdata,
   input logic maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_readdatavalid,
   output logic [4:0] maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_burstcount,
   input logic maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_writeack
);
   logic maxpool2d_start;
   logic [0:0] maxpool2d_start_chain;
   logic [0:0] maxpool2d_start_kernel_copy;
   logic [0:0] maxpool2d_start_task_fd;
   logic [0:0] maxpool2d_start_finish_element;
   logic maxpool2d_finish;
   logic [0:0] maxpool2d_finish_kernel_copy;
   logic [0:0] maxpool2d_finish_chain;
   logic [63:0] maxpool2d_global_size [2:0];
   logic [31:0] maxpool2d_num_groups [2:0];
   logic [31:0] maxpool2d_local_size [2:0];
   logic [63:0] maxpool2d_global_offset [2:0];
   logic [31:0] maxpool2d_work_dim;
   logic [31:0] maxpool2d_wg_size;
   logic [0:0] maxpool2d_wg_disp_stall_in;
   logic [0:0] maxpool2d_wg_disp_stall_in_lookahead;
   logic [0:0] maxpool2d_wg_disp_valid_out;
   logic maxpool2d_wg_disp_start_out;
   logic [31:0] maxpool2d_wg_disp_group_id_out [2:0];
   logic [31:0] maxpool2d_wg_disp_global_id_base_out [2:0];
   logic maxpool2d_wg_disp_dispatched_all_groups;
   logic [63:0] maxpool2d_global_id [1][2:0];
   logic [31:0] maxpool2d_local_id [1][2:0];
   logic [31:0] maxpool2d_group_id [1][2:0];
   logic [0:0] maxpool2d_pending_write;
   logic [0:0] maxpool2d_lsu_active;
   logic [0:0] maxpool2d_valid_in;
   logic [0:0] maxpool2d_valid_out;
   logic [0:0] maxpool2d_stall_in;
   logic [0:0] maxpool2d_stall_out;
   logic maxpool2d_cra_pending_write;
   logic maxpool2d_cra_lsu_active;
   logic maxpool2d_cra_valid_in;
   logic [191:0] maxpool2d_kernel_arguments;

   assign maxpool2d_start_chain[0] = maxpool2d_start;
   assign maxpool2d_finish_chain[0] = 1'b1;
   assign maxpool2d_cra_pending_write = |maxpool2d_pending_write;
   assign maxpool2d_cra_lsu_active = |maxpool2d_lsu_active;
   assign maxpool2d_cra_valid_in = |maxpool2d_valid_in;
   assign maxpool2d_stall_in = 0;
   // INST maxpool2d_workgroup_dispatcher of acl_work_group_dispatcher
   acl_work_group_dispatcher
   #(
      .WIDTH(32),
      .NUM_COPIES(1),
      .RUN_FOREVER(0),
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0),
      .HYPER_PIPELINE(0)
   )
   maxpool2d_workgroup_dispatcher
   (
      .clock(clock),
      .resetn(resetn),
      .start(maxpool2d_start),
      .num_groups(maxpool2d_num_groups),
      .local_size(maxpool2d_local_size),
      .stall_in(maxpool2d_wg_disp_stall_in),
      .stall_in_lookahead(maxpool2d_wg_disp_stall_in_lookahead),
      .valid_out(maxpool2d_wg_disp_valid_out),
      .group_id_out(maxpool2d_wg_disp_group_id_out),
      .global_id_base_out(maxpool2d_wg_disp_global_id_base_out),
      .start_out(maxpool2d_wg_disp_start_out),
      .dispatched_all_groups(maxpool2d_wg_disp_dispatched_all_groups)
   );

   // INST maxpool2d_finish_detector of acl_kernel_finish_detector
   acl_kernel_finish_detector
   #(
      .NUM_COPIES(1),
      .WG_SIZE_W(32),
      .GLOBAL_ID_W(32),
      .TESSELLATION_SIZE(19),
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0),
      .HYPER_PIPELINE(0)
   )
   maxpool2d_finish_detector
   (
      .clock(clock),
      .resetn(resetn),
      .start(maxpool2d_start),
      .wg_size(maxpool2d_wg_size),
      .wg_dispatch_valid_out(maxpool2d_wg_disp_valid_out),
      .wg_dispatch_stall_in(maxpool2d_wg_disp_stall_in),
      .dispatched_all_groups(maxpool2d_wg_disp_dispatched_all_groups),
      .kernel_copy_valid_out(maxpool2d_valid_out),
      .kernel_copy_stall_in(maxpool2d_stall_in),
      .pending_writes(maxpool2d_cra_pending_write),
      .finish(maxpool2d_finish)
   );

   // INST maxpool2d_cra_slave_inst of maxpool2d_function_cra_slave
   maxpool2d_function_cra_slave maxpool2d_cra_slave_inst
   (
      .clock(clock),
      .resetn(resetn),
      .start(maxpool2d_start),
      .finish(maxpool2d_finish),
      .global_offset_0(maxpool2d_global_offset[0]),
      .global_offset_1(maxpool2d_global_offset[1]),
      .global_offset_2(maxpool2d_global_offset[2]),
      .work_dim(maxpool2d_work_dim),
      .has_a_lsu_active(maxpool2d_cra_lsu_active),
      .has_a_write_pending(maxpool2d_cra_pending_write),
      .valid_in(maxpool2d_cra_valid_in),
      .global_size_0(maxpool2d_global_size[0]),
      .global_size_1(maxpool2d_global_size[1]),
      .global_size_2(maxpool2d_global_size[2]),
      .num_groups_0(maxpool2d_num_groups[0]),
      .num_groups_1(maxpool2d_num_groups[1]),
      .num_groups_2(maxpool2d_num_groups[2]),
      .local_size_0(maxpool2d_local_size[0]),
      .local_size_1(maxpool2d_local_size[1]),
      .local_size_2(maxpool2d_local_size[2]),
      .workgroup_size(maxpool2d_wg_size),
      .kernel_arguments(maxpool2d_kernel_arguments),
      .cra_irq(cra_irq_maxpool2d),
      // AVS avs_cra
      .avs_cra_enable(avs_maxpool2d_cra_enable),
      .avs_cra_read(avs_maxpool2d_cra_read),
      .avs_cra_write(avs_maxpool2d_cra_write),
      .avs_cra_address(avs_maxpool2d_cra_address),
      .avs_cra_writedata(avs_maxpool2d_cra_writedata),
      .avs_cra_byteenable(avs_maxpool2d_cra_byteenable),
      .avs_cra_readdata(avs_maxpool2d_cra_readdata),
      .avs_cra_readdatavalid(avs_maxpool2d_cra_readdatavalid)
   );

   // INST maxpool2d_id_iter_inst_0 of acl_id_iterator
   acl_id_iterator
   #(
      .WIDTH(32),
      .LOCAL_WIDTH_X(32),
      .LOCAL_WIDTH_Y(32),
      .LOCAL_WIDTH_Z(32),
      .STALL_OUT_LOOKAHEAD_COUNT(1),
      .VALID_OUT_LOOKAHEAD_COUNT(3),
      .ENABLE_TESSELLATION(1),
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0),
      .HYPER_PIPELINE(0),
      .USE_GLOBAL_WORK_OFFSET(1)
   )
   maxpool2d_id_iter_inst_0
   (
      .clock(clock),
      .resetn(resetn),
      .start(maxpool2d_wg_disp_start_out),
      .valid_in(maxpool2d_wg_disp_valid_out[0]),
      .stall_out(maxpool2d_wg_disp_stall_in[0]),
      .stall_out_lookahead(maxpool2d_wg_disp_stall_in_lookahead[0]),
      .stall_in(maxpool2d_stall_out[0]),
      .valid_out(maxpool2d_valid_in[0]),
      .group_id_in(maxpool2d_wg_disp_group_id_out),
      .global_id_base_in(maxpool2d_wg_disp_global_id_base_out),
      .local_size(maxpool2d_local_size),
      .global_size(maxpool2d_global_size),
      .global_work_offset(maxpool2d_global_offset),
      .local_id(maxpool2d_local_id[0]),
      .global_id(maxpool2d_global_id[0]),
      .group_id(maxpool2d_group_id[0])
   );

   // INST maxpool2d_inst_0 of maxpool2d_top_wrapper_0
   maxpool2d_top_wrapper_0 maxpool2d_inst_0
   (
      .start(maxpool2d_start_kernel_copy[0]),
      .kernel_arguments(maxpool2d_kernel_arguments),
      .work_dim(maxpool2d_work_dim),
      .global_offset(maxpool2d_global_offset),
      .kernel_valid_out(maxpool2d_valid_out[0]),
      .has_a_write_pending(maxpool2d_pending_write[0]),
      .has_a_lsu_active(maxpool2d_lsu_active[0]),
      .global_id(maxpool2d_global_id[0]),
      .local_id(maxpool2d_local_id[0]),
      .group_id(maxpool2d_group_id[0]),
      .global_size(maxpool2d_global_size),
      .local_size(maxpool2d_local_size),
      .num_groups(maxpool2d_num_groups),
      .workgroup_size(maxpool2d_wg_size),
      .kernel_stall_out(maxpool2d_stall_out[0]),
      .kernel_valid_in(maxpool2d_valid_in[0]),
      .clock(clock),
      .resetn(resetn),
      .clock2x(clock2x),
      // AVM avm_lm_maxpool2d
      .avm_lm_maxpool2d_enable(maxpool2d_0_avm_lm_maxpool2d_enable),
      .avm_lm_maxpool2d_read(maxpool2d_0_avm_lm_maxpool2d_read),
      .avm_lm_maxpool2d_write(maxpool2d_0_avm_lm_maxpool2d_write),
      .avm_lm_maxpool2d_address(maxpool2d_0_avm_lm_maxpool2d_address),
      .avm_lm_maxpool2d_writedata(maxpool2d_0_avm_lm_maxpool2d_writedata),
      .avm_lm_maxpool2d_byteenable(maxpool2d_0_avm_lm_maxpool2d_byteenable),
      .avm_lm_maxpool2d_waitrequest(maxpool2d_0_avm_lm_maxpool2d_waitrequest),
      .avm_lm_maxpool2d_readdata(maxpool2d_0_avm_lm_maxpool2d_readdata),
      .avm_lm_maxpool2d_readdatavalid(maxpool2d_0_avm_lm_maxpool2d_readdatavalid),
      .avm_lm_maxpool2d_burstcount(maxpool2d_0_avm_lm_maxpool2d_burstcount),
      .avm_lm_maxpool2d_writeack(maxpool2d_0_avm_lm_maxpool2d_writeack),
      // AVM avm_unnamed_maxpool2d1_maxpool2d
      .avm_unnamed_maxpool2d1_maxpool2d_enable(maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_enable),
      .avm_unnamed_maxpool2d1_maxpool2d_read(maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_read),
      .avm_unnamed_maxpool2d1_maxpool2d_write(maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_write),
      .avm_unnamed_maxpool2d1_maxpool2d_address(maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_address),
      .avm_unnamed_maxpool2d1_maxpool2d_writedata(maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_writedata),
      .avm_unnamed_maxpool2d1_maxpool2d_byteenable(maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_byteenable),
      .avm_unnamed_maxpool2d1_maxpool2d_waitrequest(maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_waitrequest),
      .avm_unnamed_maxpool2d1_maxpool2d_readdata(maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_readdata),
      .avm_unnamed_maxpool2d1_maxpool2d_readdatavalid(maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_readdatavalid),
      .avm_unnamed_maxpool2d1_maxpool2d_burstcount(maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_burstcount),
      .avm_unnamed_maxpool2d1_maxpool2d_writeack(maxpool2d_0_avm_unnamed_maxpool2d1_maxpool2d_writeack)
   );

   // INST maxpool2d_start_elem_inst_0 of acl_start_signal_chain_element
   acl_start_signal_chain_element
   #(
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0)
   )
   maxpool2d_start_elem_inst_0
   (
      .clock(clock),
      .resetn(resetn),
      .start_in(maxpool2d_start_chain[0]),
      .start_kernel(maxpool2d_start_kernel_copy[0]),
      .start_finish_detector(maxpool2d_start_task_fd[0]),
      .start_finish_chain_element(maxpool2d_start_finish_element[0]),
      .start_chain()
   );

endmodule

/////////////////////////////////////////////////////////////////
// MODULE avgpool2d_top_wrapper_0
/////////////////////////////////////////////////////////////////
module avgpool2d_top_wrapper_0
(
   input logic start,
   input logic [127:0] kernel_arguments,
   input logic [31:0] work_dim,
   input logic [63:0] global_offset [2:0],
   output logic kernel_valid_out,
   output logic has_a_write_pending,
   output logic has_a_lsu_active,
   input logic [63:0] global_id [2:0],
   input logic [31:0] local_id [2:0],
   input logic [31:0] group_id [2:0],
   input logic [63:0] global_size [2:0],
   input logic [31:0] local_size [2:0],
   input logic [31:0] num_groups [2:0],
   input logic [31:0] workgroup_size,
   output logic kernel_stall_out,
   input logic kernel_valid_in,
   input logic clock,
   input logic resetn,
   input logic clock2x,
   // AVM avm_unnamed_avgpool2d1_avgpool2d
   output logic avm_unnamed_avgpool2d1_avgpool2d_enable,
   output logic avm_unnamed_avgpool2d1_avgpool2d_read,
   output logic avm_unnamed_avgpool2d1_avgpool2d_write,
   output logic [30:0] avm_unnamed_avgpool2d1_avgpool2d_address,
   output logic [511:0] avm_unnamed_avgpool2d1_avgpool2d_writedata,
   output logic [63:0] avm_unnamed_avgpool2d1_avgpool2d_byteenable,
   input logic avm_unnamed_avgpool2d1_avgpool2d_waitrequest,
   input logic [511:0] avm_unnamed_avgpool2d1_avgpool2d_readdata,
   input logic avm_unnamed_avgpool2d1_avgpool2d_readdatavalid,
   output logic [4:0] avm_unnamed_avgpool2d1_avgpool2d_burstcount,
   input logic avm_unnamed_avgpool2d1_avgpool2d_writeack,
   // AVM avm_unnamed_avgpool2d2_avgpool2d
   output logic avm_unnamed_avgpool2d2_avgpool2d_enable,
   output logic avm_unnamed_avgpool2d2_avgpool2d_read,
   output logic avm_unnamed_avgpool2d2_avgpool2d_write,
   output logic [30:0] avm_unnamed_avgpool2d2_avgpool2d_address,
   output logic [511:0] avm_unnamed_avgpool2d2_avgpool2d_writedata,
   output logic [63:0] avm_unnamed_avgpool2d2_avgpool2d_byteenable,
   input logic avm_unnamed_avgpool2d2_avgpool2d_waitrequest,
   input logic [511:0] avm_unnamed_avgpool2d2_avgpool2d_readdata,
   input logic avm_unnamed_avgpool2d2_avgpool2d_readdatavalid,
   output logic [4:0] avm_unnamed_avgpool2d2_avgpool2d_burstcount,
   input logic avm_unnamed_avgpool2d2_avgpool2d_writeack
);
   logic lmem_invalid_single_bit;

   // INST kernel of avgpool2d_function_wrapper
   avgpool2d_function_wrapper kernel
   (
      .local_router_hang(lmem_invalid_single_bit),
      .start(start),
      .kernel_arguments(kernel_arguments),
      .work_dim(work_dim),
      .global_offset_0(global_offset[0]),
      .global_offset_1(global_offset[1]),
      .global_offset_2(global_offset[2]),
      .kernel_valid_out(kernel_valid_out),
      .has_a_write_pending(has_a_write_pending),
      .has_a_lsu_active(has_a_lsu_active),
      .global_id_0(global_id[0]),
      .global_id_1(global_id[1]),
      .global_id_2(global_id[2]),
      .local_id_0(local_id[0]),
      .local_id_1(local_id[1]),
      .local_id_2(local_id[2]),
      .group_id_0(group_id[0]),
      .group_id_1(group_id[1]),
      .group_id_2(group_id[2]),
      .global_size_0(global_size[0]),
      .global_size_1(global_size[1]),
      .global_size_2(global_size[2]),
      .local_size_0(local_size[0]),
      .local_size_1(local_size[1]),
      .local_size_2(local_size[2]),
      .num_groups_0(num_groups[0]),
      .num_groups_1(num_groups[1]),
      .num_groups_2(num_groups[2]),
      .workgroup_size(workgroup_size),
      .kernel_stall_out(kernel_stall_out),
      .kernel_valid_in(kernel_valid_in),
      .clock(clock),
      .resetn(resetn),
      .clock2x(clock2x),
      // AVM avm_unnamed_avgpool2d1_avgpool2d
      .avm_unnamed_avgpool2d1_avgpool2d_enable(avm_unnamed_avgpool2d1_avgpool2d_enable),
      .avm_unnamed_avgpool2d1_avgpool2d_read(avm_unnamed_avgpool2d1_avgpool2d_read),
      .avm_unnamed_avgpool2d1_avgpool2d_write(avm_unnamed_avgpool2d1_avgpool2d_write),
      .avm_unnamed_avgpool2d1_avgpool2d_address(avm_unnamed_avgpool2d1_avgpool2d_address),
      .avm_unnamed_avgpool2d1_avgpool2d_writedata(avm_unnamed_avgpool2d1_avgpool2d_writedata),
      .avm_unnamed_avgpool2d1_avgpool2d_byteenable(avm_unnamed_avgpool2d1_avgpool2d_byteenable),
      .avm_unnamed_avgpool2d1_avgpool2d_waitrequest(avm_unnamed_avgpool2d1_avgpool2d_waitrequest),
      .avm_unnamed_avgpool2d1_avgpool2d_readdata(avm_unnamed_avgpool2d1_avgpool2d_readdata),
      .avm_unnamed_avgpool2d1_avgpool2d_readdatavalid(avm_unnamed_avgpool2d1_avgpool2d_readdatavalid),
      .avm_unnamed_avgpool2d1_avgpool2d_burstcount(avm_unnamed_avgpool2d1_avgpool2d_burstcount),
      .avm_unnamed_avgpool2d1_avgpool2d_writeack(avm_unnamed_avgpool2d1_avgpool2d_writeack),
      // AVM avm_unnamed_avgpool2d2_avgpool2d
      .avm_unnamed_avgpool2d2_avgpool2d_enable(avm_unnamed_avgpool2d2_avgpool2d_enable),
      .avm_unnamed_avgpool2d2_avgpool2d_read(avm_unnamed_avgpool2d2_avgpool2d_read),
      .avm_unnamed_avgpool2d2_avgpool2d_write(avm_unnamed_avgpool2d2_avgpool2d_write),
      .avm_unnamed_avgpool2d2_avgpool2d_address(avm_unnamed_avgpool2d2_avgpool2d_address),
      .avm_unnamed_avgpool2d2_avgpool2d_writedata(avm_unnamed_avgpool2d2_avgpool2d_writedata),
      .avm_unnamed_avgpool2d2_avgpool2d_byteenable(avm_unnamed_avgpool2d2_avgpool2d_byteenable),
      .avm_unnamed_avgpool2d2_avgpool2d_waitrequest(avm_unnamed_avgpool2d2_avgpool2d_waitrequest),
      .avm_unnamed_avgpool2d2_avgpool2d_readdata(avm_unnamed_avgpool2d2_avgpool2d_readdata),
      .avm_unnamed_avgpool2d2_avgpool2d_readdatavalid(avm_unnamed_avgpool2d2_avgpool2d_readdatavalid),
      .avm_unnamed_avgpool2d2_avgpool2d_burstcount(avm_unnamed_avgpool2d2_avgpool2d_burstcount),
      .avm_unnamed_avgpool2d2_avgpool2d_writeack(avm_unnamed_avgpool2d2_avgpool2d_writeack)
   );

   assign lmem_invalid_single_bit = 'b0;
endmodule

/////////////////////////////////////////////////////////////////
// MODULE conv2d1x1_top_wrapper_0
/////////////////////////////////////////////////////////////////
module conv2d1x1_top_wrapper_0
(
   input logic start,
   input logic [319:0] kernel_arguments,
   input logic [31:0] work_dim,
   input logic [63:0] global_offset [2:0],
   output logic kernel_valid_out,
   output logic has_a_write_pending,
   output logic has_a_lsu_active,
   input logic [63:0] global_id [2:0],
   input logic [31:0] local_id [2:0],
   input logic [31:0] group_id [2:0],
   input logic [63:0] global_size [2:0],
   input logic [31:0] local_size [2:0],
   input logic [31:0] num_groups [2:0],
   input logic [31:0] workgroup_size,
   output logic kernel_stall_out,
   input logic kernel_valid_in,
   input logic clock,
   input logic resetn,
   input logic clock2x,
   // AVM avm_lm11_conv2d1x1
   output logic avm_lm11_conv2d1x1_enable,
   output logic avm_lm11_conv2d1x1_read,
   output logic avm_lm11_conv2d1x1_write,
   output logic [30:0] avm_lm11_conv2d1x1_address,
   output logic [511:0] avm_lm11_conv2d1x1_writedata,
   output logic [63:0] avm_lm11_conv2d1x1_byteenable,
   input logic avm_lm11_conv2d1x1_waitrequest,
   input logic [511:0] avm_lm11_conv2d1x1_readdata,
   input logic avm_lm11_conv2d1x1_readdatavalid,
   output logic [4:0] avm_lm11_conv2d1x1_burstcount,
   input logic avm_lm11_conv2d1x1_writeack,
   // AVM avm_lm12_conv2d1x1
   output logic avm_lm12_conv2d1x1_enable,
   output logic avm_lm12_conv2d1x1_read,
   output logic avm_lm12_conv2d1x1_write,
   output logic [30:0] avm_lm12_conv2d1x1_address,
   output logic [511:0] avm_lm12_conv2d1x1_writedata,
   output logic [63:0] avm_lm12_conv2d1x1_byteenable,
   input logic avm_lm12_conv2d1x1_waitrequest,
   input logic [511:0] avm_lm12_conv2d1x1_readdata,
   input logic avm_lm12_conv2d1x1_readdatavalid,
   output logic [4:0] avm_lm12_conv2d1x1_burstcount,
   input logic avm_lm12_conv2d1x1_writeack,
   // AVM avm_lm14_conv2d1x1
   output logic avm_lm14_conv2d1x1_enable,
   output logic avm_lm14_conv2d1x1_read,
   output logic avm_lm14_conv2d1x1_write,
   output logic [30:0] avm_lm14_conv2d1x1_address,
   output logic [511:0] avm_lm14_conv2d1x1_writedata,
   output logic [63:0] avm_lm14_conv2d1x1_byteenable,
   input logic avm_lm14_conv2d1x1_waitrequest,
   input logic [511:0] avm_lm14_conv2d1x1_readdata,
   input logic avm_lm14_conv2d1x1_readdatavalid,
   output logic [4:0] avm_lm14_conv2d1x1_burstcount,
   input logic avm_lm14_conv2d1x1_writeack,
   // AVM avm_lm16_conv2d1x1
   output logic avm_lm16_conv2d1x1_enable,
   output logic avm_lm16_conv2d1x1_read,
   output logic avm_lm16_conv2d1x1_write,
   output logic [30:0] avm_lm16_conv2d1x1_address,
   output logic [511:0] avm_lm16_conv2d1x1_writedata,
   output logic [63:0] avm_lm16_conv2d1x1_byteenable,
   input logic avm_lm16_conv2d1x1_waitrequest,
   input logic [511:0] avm_lm16_conv2d1x1_readdata,
   input logic avm_lm16_conv2d1x1_readdatavalid,
   output logic [4:0] avm_lm16_conv2d1x1_burstcount,
   input logic avm_lm16_conv2d1x1_writeack,
   // AVM avm_lm_conv2d1x1
   output logic avm_lm_conv2d1x1_enable,
   output logic avm_lm_conv2d1x1_read,
   output logic avm_lm_conv2d1x1_write,
   output logic [30:0] avm_lm_conv2d1x1_address,
   output logic [511:0] avm_lm_conv2d1x1_writedata,
   output logic [63:0] avm_lm_conv2d1x1_byteenable,
   input logic avm_lm_conv2d1x1_waitrequest,
   input logic [511:0] avm_lm_conv2d1x1_readdata,
   input logic avm_lm_conv2d1x1_readdatavalid,
   output logic [4:0] avm_lm_conv2d1x1_burstcount,
   input logic avm_lm_conv2d1x1_writeack,
   // AVM avm_unnamed_conv2d1x10_conv2d1x1
   output logic avm_unnamed_conv2d1x10_conv2d1x1_enable,
   output logic avm_unnamed_conv2d1x10_conv2d1x1_read,
   output logic avm_unnamed_conv2d1x10_conv2d1x1_write,
   output logic [30:0] avm_unnamed_conv2d1x10_conv2d1x1_address,
   output logic [511:0] avm_unnamed_conv2d1x10_conv2d1x1_writedata,
   output logic [63:0] avm_unnamed_conv2d1x10_conv2d1x1_byteenable,
   input logic avm_unnamed_conv2d1x10_conv2d1x1_waitrequest,
   input logic [511:0] avm_unnamed_conv2d1x10_conv2d1x1_readdata,
   input logic avm_unnamed_conv2d1x10_conv2d1x1_readdatavalid,
   output logic [4:0] avm_unnamed_conv2d1x10_conv2d1x1_burstcount,
   input logic avm_unnamed_conv2d1x10_conv2d1x1_writeack,
   // AVM avm_unnamed_conv2d1x15_conv2d1x1
   output logic avm_unnamed_conv2d1x15_conv2d1x1_enable,
   output logic avm_unnamed_conv2d1x15_conv2d1x1_read,
   output logic avm_unnamed_conv2d1x15_conv2d1x1_write,
   output logic [30:0] avm_unnamed_conv2d1x15_conv2d1x1_address,
   output logic [511:0] avm_unnamed_conv2d1x15_conv2d1x1_writedata,
   output logic [63:0] avm_unnamed_conv2d1x15_conv2d1x1_byteenable,
   input logic avm_unnamed_conv2d1x15_conv2d1x1_waitrequest,
   input logic [511:0] avm_unnamed_conv2d1x15_conv2d1x1_readdata,
   input logic avm_unnamed_conv2d1x15_conv2d1x1_readdatavalid,
   output logic [4:0] avm_unnamed_conv2d1x15_conv2d1x1_burstcount,
   input logic avm_unnamed_conv2d1x15_conv2d1x1_writeack
);
   logic lmem_invalid_single_bit;

   // INST kernel of conv2d1x1_function_wrapper
   conv2d1x1_function_wrapper kernel
   (
      .local_router_hang(lmem_invalid_single_bit),
      .start(start),
      .kernel_arguments(kernel_arguments),
      .work_dim(work_dim),
      .global_offset_0(global_offset[0]),
      .global_offset_1(global_offset[1]),
      .global_offset_2(global_offset[2]),
      .kernel_valid_out(kernel_valid_out),
      .has_a_write_pending(has_a_write_pending),
      .has_a_lsu_active(has_a_lsu_active),
      .global_id_0(global_id[0]),
      .global_id_1(global_id[1]),
      .global_id_2(global_id[2]),
      .local_id_0(local_id[0]),
      .local_id_1(local_id[1]),
      .local_id_2(local_id[2]),
      .group_id_0(group_id[0]),
      .group_id_1(group_id[1]),
      .group_id_2(group_id[2]),
      .global_size_0(global_size[0]),
      .global_size_1(global_size[1]),
      .global_size_2(global_size[2]),
      .local_size_0(local_size[0]),
      .local_size_1(local_size[1]),
      .local_size_2(local_size[2]),
      .num_groups_0(num_groups[0]),
      .num_groups_1(num_groups[1]),
      .num_groups_2(num_groups[2]),
      .workgroup_size(workgroup_size),
      .kernel_stall_out(kernel_stall_out),
      .kernel_valid_in(kernel_valid_in),
      .clock(clock),
      .resetn(resetn),
      .clock2x(clock2x),
      // AVM avm_lm11_conv2d1x1
      .avm_lm11_conv2d1x1_enable(avm_lm11_conv2d1x1_enable),
      .avm_lm11_conv2d1x1_read(avm_lm11_conv2d1x1_read),
      .avm_lm11_conv2d1x1_write(avm_lm11_conv2d1x1_write),
      .avm_lm11_conv2d1x1_address(avm_lm11_conv2d1x1_address),
      .avm_lm11_conv2d1x1_writedata(avm_lm11_conv2d1x1_writedata),
      .avm_lm11_conv2d1x1_byteenable(avm_lm11_conv2d1x1_byteenable),
      .avm_lm11_conv2d1x1_waitrequest(avm_lm11_conv2d1x1_waitrequest),
      .avm_lm11_conv2d1x1_readdata(avm_lm11_conv2d1x1_readdata),
      .avm_lm11_conv2d1x1_readdatavalid(avm_lm11_conv2d1x1_readdatavalid),
      .avm_lm11_conv2d1x1_burstcount(avm_lm11_conv2d1x1_burstcount),
      .avm_lm11_conv2d1x1_writeack(avm_lm11_conv2d1x1_writeack),
      // AVM avm_lm12_conv2d1x1
      .avm_lm12_conv2d1x1_enable(avm_lm12_conv2d1x1_enable),
      .avm_lm12_conv2d1x1_read(avm_lm12_conv2d1x1_read),
      .avm_lm12_conv2d1x1_write(avm_lm12_conv2d1x1_write),
      .avm_lm12_conv2d1x1_address(avm_lm12_conv2d1x1_address),
      .avm_lm12_conv2d1x1_writedata(avm_lm12_conv2d1x1_writedata),
      .avm_lm12_conv2d1x1_byteenable(avm_lm12_conv2d1x1_byteenable),
      .avm_lm12_conv2d1x1_waitrequest(avm_lm12_conv2d1x1_waitrequest),
      .avm_lm12_conv2d1x1_readdata(avm_lm12_conv2d1x1_readdata),
      .avm_lm12_conv2d1x1_readdatavalid(avm_lm12_conv2d1x1_readdatavalid),
      .avm_lm12_conv2d1x1_burstcount(avm_lm12_conv2d1x1_burstcount),
      .avm_lm12_conv2d1x1_writeack(avm_lm12_conv2d1x1_writeack),
      // AVM avm_lm14_conv2d1x1
      .avm_lm14_conv2d1x1_enable(avm_lm14_conv2d1x1_enable),
      .avm_lm14_conv2d1x1_read(avm_lm14_conv2d1x1_read),
      .avm_lm14_conv2d1x1_write(avm_lm14_conv2d1x1_write),
      .avm_lm14_conv2d1x1_address(avm_lm14_conv2d1x1_address),
      .avm_lm14_conv2d1x1_writedata(avm_lm14_conv2d1x1_writedata),
      .avm_lm14_conv2d1x1_byteenable(avm_lm14_conv2d1x1_byteenable),
      .avm_lm14_conv2d1x1_waitrequest(avm_lm14_conv2d1x1_waitrequest),
      .avm_lm14_conv2d1x1_readdata(avm_lm14_conv2d1x1_readdata),
      .avm_lm14_conv2d1x1_readdatavalid(avm_lm14_conv2d1x1_readdatavalid),
      .avm_lm14_conv2d1x1_burstcount(avm_lm14_conv2d1x1_burstcount),
      .avm_lm14_conv2d1x1_writeack(avm_lm14_conv2d1x1_writeack),
      // AVM avm_lm16_conv2d1x1
      .avm_lm16_conv2d1x1_enable(avm_lm16_conv2d1x1_enable),
      .avm_lm16_conv2d1x1_read(avm_lm16_conv2d1x1_read),
      .avm_lm16_conv2d1x1_write(avm_lm16_conv2d1x1_write),
      .avm_lm16_conv2d1x1_address(avm_lm16_conv2d1x1_address),
      .avm_lm16_conv2d1x1_writedata(avm_lm16_conv2d1x1_writedata),
      .avm_lm16_conv2d1x1_byteenable(avm_lm16_conv2d1x1_byteenable),
      .avm_lm16_conv2d1x1_waitrequest(avm_lm16_conv2d1x1_waitrequest),
      .avm_lm16_conv2d1x1_readdata(avm_lm16_conv2d1x1_readdata),
      .avm_lm16_conv2d1x1_readdatavalid(avm_lm16_conv2d1x1_readdatavalid),
      .avm_lm16_conv2d1x1_burstcount(avm_lm16_conv2d1x1_burstcount),
      .avm_lm16_conv2d1x1_writeack(avm_lm16_conv2d1x1_writeack),
      // AVM avm_lm_conv2d1x1
      .avm_lm_conv2d1x1_enable(avm_lm_conv2d1x1_enable),
      .avm_lm_conv2d1x1_read(avm_lm_conv2d1x1_read),
      .avm_lm_conv2d1x1_write(avm_lm_conv2d1x1_write),
      .avm_lm_conv2d1x1_address(avm_lm_conv2d1x1_address),
      .avm_lm_conv2d1x1_writedata(avm_lm_conv2d1x1_writedata),
      .avm_lm_conv2d1x1_byteenable(avm_lm_conv2d1x1_byteenable),
      .avm_lm_conv2d1x1_waitrequest(avm_lm_conv2d1x1_waitrequest),
      .avm_lm_conv2d1x1_readdata(avm_lm_conv2d1x1_readdata),
      .avm_lm_conv2d1x1_readdatavalid(avm_lm_conv2d1x1_readdatavalid),
      .avm_lm_conv2d1x1_burstcount(avm_lm_conv2d1x1_burstcount),
      .avm_lm_conv2d1x1_writeack(avm_lm_conv2d1x1_writeack),
      // AVM avm_unnamed_conv2d1x10_conv2d1x1
      .avm_unnamed_conv2d1x10_conv2d1x1_enable(avm_unnamed_conv2d1x10_conv2d1x1_enable),
      .avm_unnamed_conv2d1x10_conv2d1x1_read(avm_unnamed_conv2d1x10_conv2d1x1_read),
      .avm_unnamed_conv2d1x10_conv2d1x1_write(avm_unnamed_conv2d1x10_conv2d1x1_write),
      .avm_unnamed_conv2d1x10_conv2d1x1_address(avm_unnamed_conv2d1x10_conv2d1x1_address),
      .avm_unnamed_conv2d1x10_conv2d1x1_writedata(avm_unnamed_conv2d1x10_conv2d1x1_writedata),
      .avm_unnamed_conv2d1x10_conv2d1x1_byteenable(avm_unnamed_conv2d1x10_conv2d1x1_byteenable),
      .avm_unnamed_conv2d1x10_conv2d1x1_waitrequest(avm_unnamed_conv2d1x10_conv2d1x1_waitrequest),
      .avm_unnamed_conv2d1x10_conv2d1x1_readdata(avm_unnamed_conv2d1x10_conv2d1x1_readdata),
      .avm_unnamed_conv2d1x10_conv2d1x1_readdatavalid(avm_unnamed_conv2d1x10_conv2d1x1_readdatavalid),
      .avm_unnamed_conv2d1x10_conv2d1x1_burstcount(avm_unnamed_conv2d1x10_conv2d1x1_burstcount),
      .avm_unnamed_conv2d1x10_conv2d1x1_writeack(avm_unnamed_conv2d1x10_conv2d1x1_writeack),
      // AVM avm_unnamed_conv2d1x15_conv2d1x1
      .avm_unnamed_conv2d1x15_conv2d1x1_enable(avm_unnamed_conv2d1x15_conv2d1x1_enable),
      .avm_unnamed_conv2d1x15_conv2d1x1_read(avm_unnamed_conv2d1x15_conv2d1x1_read),
      .avm_unnamed_conv2d1x15_conv2d1x1_write(avm_unnamed_conv2d1x15_conv2d1x1_write),
      .avm_unnamed_conv2d1x15_conv2d1x1_address(avm_unnamed_conv2d1x15_conv2d1x1_address),
      .avm_unnamed_conv2d1x15_conv2d1x1_writedata(avm_unnamed_conv2d1x15_conv2d1x1_writedata),
      .avm_unnamed_conv2d1x15_conv2d1x1_byteenable(avm_unnamed_conv2d1x15_conv2d1x1_byteenable),
      .avm_unnamed_conv2d1x15_conv2d1x1_waitrequest(avm_unnamed_conv2d1x15_conv2d1x1_waitrequest),
      .avm_unnamed_conv2d1x15_conv2d1x1_readdata(avm_unnamed_conv2d1x15_conv2d1x1_readdata),
      .avm_unnamed_conv2d1x15_conv2d1x1_readdatavalid(avm_unnamed_conv2d1x15_conv2d1x1_readdatavalid),
      .avm_unnamed_conv2d1x15_conv2d1x1_burstcount(avm_unnamed_conv2d1x15_conv2d1x1_burstcount),
      .avm_unnamed_conv2d1x15_conv2d1x1_writeack(avm_unnamed_conv2d1x15_conv2d1x1_writeack)
   );

   assign lmem_invalid_single_bit = 'b0;
endmodule

/////////////////////////////////////////////////////////////////
// MODULE conv2d3x3_top_wrapper_0
/////////////////////////////////////////////////////////////////
module conv2d3x3_top_wrapper_0
(
   input logic start,
   input logic [447:0] kernel_arguments,
   input logic [31:0] work_dim,
   input logic [63:0] global_offset [2:0],
   output logic kernel_valid_out,
   output logic has_a_write_pending,
   output logic has_a_lsu_active,
   input logic [63:0] global_id [2:0],
   input logic [31:0] local_id [2:0],
   input logic [31:0] group_id [2:0],
   input logic [63:0] global_size [2:0],
   input logic [31:0] local_size [2:0],
   input logic [31:0] num_groups [2:0],
   input logic [31:0] workgroup_size,
   output logic kernel_stall_out,
   input logic kernel_valid_in,
   input logic clock,
   input logic resetn,
   input logic clock2x,
   // AVM avm_lm13_conv2d3x3
   output logic avm_lm13_conv2d3x3_enable,
   output logic avm_lm13_conv2d3x3_read,
   output logic avm_lm13_conv2d3x3_write,
   output logic [30:0] avm_lm13_conv2d3x3_address,
   output logic [511:0] avm_lm13_conv2d3x3_writedata,
   output logic [63:0] avm_lm13_conv2d3x3_byteenable,
   input logic avm_lm13_conv2d3x3_waitrequest,
   input logic [511:0] avm_lm13_conv2d3x3_readdata,
   input logic avm_lm13_conv2d3x3_readdatavalid,
   output logic [4:0] avm_lm13_conv2d3x3_burstcount,
   input logic avm_lm13_conv2d3x3_writeack,
   // AVM avm_lm18_conv2d3x3
   output logic avm_lm18_conv2d3x3_enable,
   output logic avm_lm18_conv2d3x3_read,
   output logic avm_lm18_conv2d3x3_write,
   output logic [30:0] avm_lm18_conv2d3x3_address,
   output logic [511:0] avm_lm18_conv2d3x3_writedata,
   output logic [63:0] avm_lm18_conv2d3x3_byteenable,
   input logic avm_lm18_conv2d3x3_waitrequest,
   input logic [511:0] avm_lm18_conv2d3x3_readdata,
   input logic avm_lm18_conv2d3x3_readdatavalid,
   output logic [4:0] avm_lm18_conv2d3x3_burstcount,
   input logic avm_lm18_conv2d3x3_writeack,
   // AVM avm_lm20_conv2d3x3
   output logic avm_lm20_conv2d3x3_enable,
   output logic avm_lm20_conv2d3x3_read,
   output logic avm_lm20_conv2d3x3_write,
   output logic [30:0] avm_lm20_conv2d3x3_address,
   output logic [511:0] avm_lm20_conv2d3x3_writedata,
   output logic [63:0] avm_lm20_conv2d3x3_byteenable,
   input logic avm_lm20_conv2d3x3_waitrequest,
   input logic [511:0] avm_lm20_conv2d3x3_readdata,
   input logic avm_lm20_conv2d3x3_readdatavalid,
   output logic [4:0] avm_lm20_conv2d3x3_burstcount,
   input logic avm_lm20_conv2d3x3_writeack,
   // AVM avm_lm25_conv2d3x3
   output logic avm_lm25_conv2d3x3_enable,
   output logic avm_lm25_conv2d3x3_read,
   output logic avm_lm25_conv2d3x3_write,
   output logic [30:0] avm_lm25_conv2d3x3_address,
   output logic [511:0] avm_lm25_conv2d3x3_writedata,
   output logic [63:0] avm_lm25_conv2d3x3_byteenable,
   input logic avm_lm25_conv2d3x3_waitrequest,
   input logic [511:0] avm_lm25_conv2d3x3_readdata,
   input logic avm_lm25_conv2d3x3_readdatavalid,
   output logic [4:0] avm_lm25_conv2d3x3_burstcount,
   input logic avm_lm25_conv2d3x3_writeack,
   // AVM avm_lm27_conv2d3x3
   output logic avm_lm27_conv2d3x3_enable,
   output logic avm_lm27_conv2d3x3_read,
   output logic avm_lm27_conv2d3x3_write,
   output logic [30:0] avm_lm27_conv2d3x3_address,
   output logic [511:0] avm_lm27_conv2d3x3_writedata,
   output logic [63:0] avm_lm27_conv2d3x3_byteenable,
   input logic avm_lm27_conv2d3x3_waitrequest,
   input logic [511:0] avm_lm27_conv2d3x3_readdata,
   input logic avm_lm27_conv2d3x3_readdatavalid,
   output logic [4:0] avm_lm27_conv2d3x3_burstcount,
   input logic avm_lm27_conv2d3x3_writeack,
   // AVM avm_lm_conv2d3x3
   output logic avm_lm_conv2d3x3_enable,
   output logic avm_lm_conv2d3x3_read,
   output logic avm_lm_conv2d3x3_write,
   output logic [30:0] avm_lm_conv2d3x3_address,
   output logic [511:0] avm_lm_conv2d3x3_writedata,
   output logic [63:0] avm_lm_conv2d3x3_byteenable,
   input logic avm_lm_conv2d3x3_waitrequest,
   input logic [511:0] avm_lm_conv2d3x3_readdata,
   input logic avm_lm_conv2d3x3_readdatavalid,
   output logic [4:0] avm_lm_conv2d3x3_burstcount,
   input logic avm_lm_conv2d3x3_writeack,
   // AVM avm_unnamed_conv2d3x30_conv2d3x3
   output logic avm_unnamed_conv2d3x30_conv2d3x3_enable,
   output logic avm_unnamed_conv2d3x30_conv2d3x3_read,
   output logic avm_unnamed_conv2d3x30_conv2d3x3_write,
   output logic [30:0] avm_unnamed_conv2d3x30_conv2d3x3_address,
   output logic [511:0] avm_unnamed_conv2d3x30_conv2d3x3_writedata,
   output logic [63:0] avm_unnamed_conv2d3x30_conv2d3x3_byteenable,
   input logic avm_unnamed_conv2d3x30_conv2d3x3_waitrequest,
   input logic [511:0] avm_unnamed_conv2d3x30_conv2d3x3_readdata,
   input logic avm_unnamed_conv2d3x30_conv2d3x3_readdatavalid,
   output logic [4:0] avm_unnamed_conv2d3x30_conv2d3x3_burstcount,
   input logic avm_unnamed_conv2d3x30_conv2d3x3_writeack,
   // AVM avm_unnamed_conv2d3x36_conv2d3x3
   output logic avm_unnamed_conv2d3x36_conv2d3x3_enable,
   output logic avm_unnamed_conv2d3x36_conv2d3x3_read,
   output logic avm_unnamed_conv2d3x36_conv2d3x3_write,
   output logic [30:0] avm_unnamed_conv2d3x36_conv2d3x3_address,
   output logic [511:0] avm_unnamed_conv2d3x36_conv2d3x3_writedata,
   output logic [63:0] avm_unnamed_conv2d3x36_conv2d3x3_byteenable,
   input logic avm_unnamed_conv2d3x36_conv2d3x3_waitrequest,
   input logic [511:0] avm_unnamed_conv2d3x36_conv2d3x3_readdata,
   input logic avm_unnamed_conv2d3x36_conv2d3x3_readdatavalid,
   output logic [4:0] avm_unnamed_conv2d3x36_conv2d3x3_burstcount,
   input logic avm_unnamed_conv2d3x36_conv2d3x3_writeack
);
   logic lmem_invalid_single_bit;

   // INST kernel of conv2d3x3_function_wrapper
   conv2d3x3_function_wrapper kernel
   (
      .local_router_hang(lmem_invalid_single_bit),
      .start(start),
      .kernel_arguments(kernel_arguments),
      .work_dim(work_dim),
      .global_offset_0(global_offset[0]),
      .global_offset_1(global_offset[1]),
      .global_offset_2(global_offset[2]),
      .kernel_valid_out(kernel_valid_out),
      .has_a_write_pending(has_a_write_pending),
      .has_a_lsu_active(has_a_lsu_active),
      .global_id_0(global_id[0]),
      .global_id_1(global_id[1]),
      .global_id_2(global_id[2]),
      .local_id_0(local_id[0]),
      .local_id_1(local_id[1]),
      .local_id_2(local_id[2]),
      .group_id_0(group_id[0]),
      .group_id_1(group_id[1]),
      .group_id_2(group_id[2]),
      .global_size_0(global_size[0]),
      .global_size_1(global_size[1]),
      .global_size_2(global_size[2]),
      .local_size_0(local_size[0]),
      .local_size_1(local_size[1]),
      .local_size_2(local_size[2]),
      .num_groups_0(num_groups[0]),
      .num_groups_1(num_groups[1]),
      .num_groups_2(num_groups[2]),
      .workgroup_size(workgroup_size),
      .kernel_stall_out(kernel_stall_out),
      .kernel_valid_in(kernel_valid_in),
      .clock(clock),
      .resetn(resetn),
      .clock2x(clock2x),
      // AVM avm_lm13_conv2d3x3
      .avm_lm13_conv2d3x3_enable(avm_lm13_conv2d3x3_enable),
      .avm_lm13_conv2d3x3_read(avm_lm13_conv2d3x3_read),
      .avm_lm13_conv2d3x3_write(avm_lm13_conv2d3x3_write),
      .avm_lm13_conv2d3x3_address(avm_lm13_conv2d3x3_address),
      .avm_lm13_conv2d3x3_writedata(avm_lm13_conv2d3x3_writedata),
      .avm_lm13_conv2d3x3_byteenable(avm_lm13_conv2d3x3_byteenable),
      .avm_lm13_conv2d3x3_waitrequest(avm_lm13_conv2d3x3_waitrequest),
      .avm_lm13_conv2d3x3_readdata(avm_lm13_conv2d3x3_readdata),
      .avm_lm13_conv2d3x3_readdatavalid(avm_lm13_conv2d3x3_readdatavalid),
      .avm_lm13_conv2d3x3_burstcount(avm_lm13_conv2d3x3_burstcount),
      .avm_lm13_conv2d3x3_writeack(avm_lm13_conv2d3x3_writeack),
      // AVM avm_lm18_conv2d3x3
      .avm_lm18_conv2d3x3_enable(avm_lm18_conv2d3x3_enable),
      .avm_lm18_conv2d3x3_read(avm_lm18_conv2d3x3_read),
      .avm_lm18_conv2d3x3_write(avm_lm18_conv2d3x3_write),
      .avm_lm18_conv2d3x3_address(avm_lm18_conv2d3x3_address),
      .avm_lm18_conv2d3x3_writedata(avm_lm18_conv2d3x3_writedata),
      .avm_lm18_conv2d3x3_byteenable(avm_lm18_conv2d3x3_byteenable),
      .avm_lm18_conv2d3x3_waitrequest(avm_lm18_conv2d3x3_waitrequest),
      .avm_lm18_conv2d3x3_readdata(avm_lm18_conv2d3x3_readdata),
      .avm_lm18_conv2d3x3_readdatavalid(avm_lm18_conv2d3x3_readdatavalid),
      .avm_lm18_conv2d3x3_burstcount(avm_lm18_conv2d3x3_burstcount),
      .avm_lm18_conv2d3x3_writeack(avm_lm18_conv2d3x3_writeack),
      // AVM avm_lm20_conv2d3x3
      .avm_lm20_conv2d3x3_enable(avm_lm20_conv2d3x3_enable),
      .avm_lm20_conv2d3x3_read(avm_lm20_conv2d3x3_read),
      .avm_lm20_conv2d3x3_write(avm_lm20_conv2d3x3_write),
      .avm_lm20_conv2d3x3_address(avm_lm20_conv2d3x3_address),
      .avm_lm20_conv2d3x3_writedata(avm_lm20_conv2d3x3_writedata),
      .avm_lm20_conv2d3x3_byteenable(avm_lm20_conv2d3x3_byteenable),
      .avm_lm20_conv2d3x3_waitrequest(avm_lm20_conv2d3x3_waitrequest),
      .avm_lm20_conv2d3x3_readdata(avm_lm20_conv2d3x3_readdata),
      .avm_lm20_conv2d3x3_readdatavalid(avm_lm20_conv2d3x3_readdatavalid),
      .avm_lm20_conv2d3x3_burstcount(avm_lm20_conv2d3x3_burstcount),
      .avm_lm20_conv2d3x3_writeack(avm_lm20_conv2d3x3_writeack),
      // AVM avm_lm25_conv2d3x3
      .avm_lm25_conv2d3x3_enable(avm_lm25_conv2d3x3_enable),
      .avm_lm25_conv2d3x3_read(avm_lm25_conv2d3x3_read),
      .avm_lm25_conv2d3x3_write(avm_lm25_conv2d3x3_write),
      .avm_lm25_conv2d3x3_address(avm_lm25_conv2d3x3_address),
      .avm_lm25_conv2d3x3_writedata(avm_lm25_conv2d3x3_writedata),
      .avm_lm25_conv2d3x3_byteenable(avm_lm25_conv2d3x3_byteenable),
      .avm_lm25_conv2d3x3_waitrequest(avm_lm25_conv2d3x3_waitrequest),
      .avm_lm25_conv2d3x3_readdata(avm_lm25_conv2d3x3_readdata),
      .avm_lm25_conv2d3x3_readdatavalid(avm_lm25_conv2d3x3_readdatavalid),
      .avm_lm25_conv2d3x3_burstcount(avm_lm25_conv2d3x3_burstcount),
      .avm_lm25_conv2d3x3_writeack(avm_lm25_conv2d3x3_writeack),
      // AVM avm_lm27_conv2d3x3
      .avm_lm27_conv2d3x3_enable(avm_lm27_conv2d3x3_enable),
      .avm_lm27_conv2d3x3_read(avm_lm27_conv2d3x3_read),
      .avm_lm27_conv2d3x3_write(avm_lm27_conv2d3x3_write),
      .avm_lm27_conv2d3x3_address(avm_lm27_conv2d3x3_address),
      .avm_lm27_conv2d3x3_writedata(avm_lm27_conv2d3x3_writedata),
      .avm_lm27_conv2d3x3_byteenable(avm_lm27_conv2d3x3_byteenable),
      .avm_lm27_conv2d3x3_waitrequest(avm_lm27_conv2d3x3_waitrequest),
      .avm_lm27_conv2d3x3_readdata(avm_lm27_conv2d3x3_readdata),
      .avm_lm27_conv2d3x3_readdatavalid(avm_lm27_conv2d3x3_readdatavalid),
      .avm_lm27_conv2d3x3_burstcount(avm_lm27_conv2d3x3_burstcount),
      .avm_lm27_conv2d3x3_writeack(avm_lm27_conv2d3x3_writeack),
      // AVM avm_lm_conv2d3x3
      .avm_lm_conv2d3x3_enable(avm_lm_conv2d3x3_enable),
      .avm_lm_conv2d3x3_read(avm_lm_conv2d3x3_read),
      .avm_lm_conv2d3x3_write(avm_lm_conv2d3x3_write),
      .avm_lm_conv2d3x3_address(avm_lm_conv2d3x3_address),
      .avm_lm_conv2d3x3_writedata(avm_lm_conv2d3x3_writedata),
      .avm_lm_conv2d3x3_byteenable(avm_lm_conv2d3x3_byteenable),
      .avm_lm_conv2d3x3_waitrequest(avm_lm_conv2d3x3_waitrequest),
      .avm_lm_conv2d3x3_readdata(avm_lm_conv2d3x3_readdata),
      .avm_lm_conv2d3x3_readdatavalid(avm_lm_conv2d3x3_readdatavalid),
      .avm_lm_conv2d3x3_burstcount(avm_lm_conv2d3x3_burstcount),
      .avm_lm_conv2d3x3_writeack(avm_lm_conv2d3x3_writeack),
      // AVM avm_unnamed_conv2d3x30_conv2d3x3
      .avm_unnamed_conv2d3x30_conv2d3x3_enable(avm_unnamed_conv2d3x30_conv2d3x3_enable),
      .avm_unnamed_conv2d3x30_conv2d3x3_read(avm_unnamed_conv2d3x30_conv2d3x3_read),
      .avm_unnamed_conv2d3x30_conv2d3x3_write(avm_unnamed_conv2d3x30_conv2d3x3_write),
      .avm_unnamed_conv2d3x30_conv2d3x3_address(avm_unnamed_conv2d3x30_conv2d3x3_address),
      .avm_unnamed_conv2d3x30_conv2d3x3_writedata(avm_unnamed_conv2d3x30_conv2d3x3_writedata),
      .avm_unnamed_conv2d3x30_conv2d3x3_byteenable(avm_unnamed_conv2d3x30_conv2d3x3_byteenable),
      .avm_unnamed_conv2d3x30_conv2d3x3_waitrequest(avm_unnamed_conv2d3x30_conv2d3x3_waitrequest),
      .avm_unnamed_conv2d3x30_conv2d3x3_readdata(avm_unnamed_conv2d3x30_conv2d3x3_readdata),
      .avm_unnamed_conv2d3x30_conv2d3x3_readdatavalid(avm_unnamed_conv2d3x30_conv2d3x3_readdatavalid),
      .avm_unnamed_conv2d3x30_conv2d3x3_burstcount(avm_unnamed_conv2d3x30_conv2d3x3_burstcount),
      .avm_unnamed_conv2d3x30_conv2d3x3_writeack(avm_unnamed_conv2d3x30_conv2d3x3_writeack),
      // AVM avm_unnamed_conv2d3x36_conv2d3x3
      .avm_unnamed_conv2d3x36_conv2d3x3_enable(avm_unnamed_conv2d3x36_conv2d3x3_enable),
      .avm_unnamed_conv2d3x36_conv2d3x3_read(avm_unnamed_conv2d3x36_conv2d3x3_read),
      .avm_unnamed_conv2d3x36_conv2d3x3_write(avm_unnamed_conv2d3x36_conv2d3x3_write),
      .avm_unnamed_conv2d3x36_conv2d3x3_address(avm_unnamed_conv2d3x36_conv2d3x3_address),
      .avm_unnamed_conv2d3x36_conv2d3x3_writedata(avm_unnamed_conv2d3x36_conv2d3x3_writedata),
      .avm_unnamed_conv2d3x36_conv2d3x3_byteenable(avm_unnamed_conv2d3x36_conv2d3x3_byteenable),
      .avm_unnamed_conv2d3x36_conv2d3x3_waitrequest(avm_unnamed_conv2d3x36_conv2d3x3_waitrequest),
      .avm_unnamed_conv2d3x36_conv2d3x3_readdata(avm_unnamed_conv2d3x36_conv2d3x3_readdata),
      .avm_unnamed_conv2d3x36_conv2d3x3_readdatavalid(avm_unnamed_conv2d3x36_conv2d3x3_readdatavalid),
      .avm_unnamed_conv2d3x36_conv2d3x3_burstcount(avm_unnamed_conv2d3x36_conv2d3x3_burstcount),
      .avm_unnamed_conv2d3x36_conv2d3x3_writeack(avm_unnamed_conv2d3x36_conv2d3x3_writeack)
   );

   assign lmem_invalid_single_bit = 'b0;
endmodule

/////////////////////////////////////////////////////////////////
// MODULE maxpool2d_top_wrapper_0
/////////////////////////////////////////////////////////////////
module maxpool2d_top_wrapper_0
(
   input logic start,
   input logic [191:0] kernel_arguments,
   input logic [31:0] work_dim,
   input logic [63:0] global_offset [2:0],
   output logic kernel_valid_out,
   output logic has_a_write_pending,
   output logic has_a_lsu_active,
   input logic [63:0] global_id [2:0],
   input logic [31:0] local_id [2:0],
   input logic [31:0] group_id [2:0],
   input logic [63:0] global_size [2:0],
   input logic [31:0] local_size [2:0],
   input logic [31:0] num_groups [2:0],
   input logic [31:0] workgroup_size,
   output logic kernel_stall_out,
   input logic kernel_valid_in,
   input logic clock,
   input logic resetn,
   input logic clock2x,
   // AVM avm_lm_maxpool2d
   output logic avm_lm_maxpool2d_enable,
   output logic avm_lm_maxpool2d_read,
   output logic avm_lm_maxpool2d_write,
   output logic [30:0] avm_lm_maxpool2d_address,
   output logic [511:0] avm_lm_maxpool2d_writedata,
   output logic [63:0] avm_lm_maxpool2d_byteenable,
   input logic avm_lm_maxpool2d_waitrequest,
   input logic [511:0] avm_lm_maxpool2d_readdata,
   input logic avm_lm_maxpool2d_readdatavalid,
   output logic [4:0] avm_lm_maxpool2d_burstcount,
   input logic avm_lm_maxpool2d_writeack,
   // AVM avm_unnamed_maxpool2d1_maxpool2d
   output logic avm_unnamed_maxpool2d1_maxpool2d_enable,
   output logic avm_unnamed_maxpool2d1_maxpool2d_read,
   output logic avm_unnamed_maxpool2d1_maxpool2d_write,
   output logic [30:0] avm_unnamed_maxpool2d1_maxpool2d_address,
   output logic [511:0] avm_unnamed_maxpool2d1_maxpool2d_writedata,
   output logic [63:0] avm_unnamed_maxpool2d1_maxpool2d_byteenable,
   input logic avm_unnamed_maxpool2d1_maxpool2d_waitrequest,
   input logic [511:0] avm_unnamed_maxpool2d1_maxpool2d_readdata,
   input logic avm_unnamed_maxpool2d1_maxpool2d_readdatavalid,
   output logic [4:0] avm_unnamed_maxpool2d1_maxpool2d_burstcount,
   input logic avm_unnamed_maxpool2d1_maxpool2d_writeack
);
   logic lmem_invalid_single_bit;

   // INST kernel of maxpool2d_function_wrapper
   maxpool2d_function_wrapper kernel
   (
      .local_router_hang(lmem_invalid_single_bit),
      .start(start),
      .kernel_arguments(kernel_arguments),
      .work_dim(work_dim),
      .global_offset_0(global_offset[0]),
      .global_offset_1(global_offset[1]),
      .global_offset_2(global_offset[2]),
      .kernel_valid_out(kernel_valid_out),
      .has_a_write_pending(has_a_write_pending),
      .has_a_lsu_active(has_a_lsu_active),
      .global_id_0(global_id[0]),
      .global_id_1(global_id[1]),
      .global_id_2(global_id[2]),
      .local_id_0(local_id[0]),
      .local_id_1(local_id[1]),
      .local_id_2(local_id[2]),
      .group_id_0(group_id[0]),
      .group_id_1(group_id[1]),
      .group_id_2(group_id[2]),
      .global_size_0(global_size[0]),
      .global_size_1(global_size[1]),
      .global_size_2(global_size[2]),
      .local_size_0(local_size[0]),
      .local_size_1(local_size[1]),
      .local_size_2(local_size[2]),
      .num_groups_0(num_groups[0]),
      .num_groups_1(num_groups[1]),
      .num_groups_2(num_groups[2]),
      .workgroup_size(workgroup_size),
      .kernel_stall_out(kernel_stall_out),
      .kernel_valid_in(kernel_valid_in),
      .clock(clock),
      .resetn(resetn),
      .clock2x(clock2x),
      // AVM avm_lm_maxpool2d
      .avm_lm_maxpool2d_enable(avm_lm_maxpool2d_enable),
      .avm_lm_maxpool2d_read(avm_lm_maxpool2d_read),
      .avm_lm_maxpool2d_write(avm_lm_maxpool2d_write),
      .avm_lm_maxpool2d_address(avm_lm_maxpool2d_address),
      .avm_lm_maxpool2d_writedata(avm_lm_maxpool2d_writedata),
      .avm_lm_maxpool2d_byteenable(avm_lm_maxpool2d_byteenable),
      .avm_lm_maxpool2d_waitrequest(avm_lm_maxpool2d_waitrequest),
      .avm_lm_maxpool2d_readdata(avm_lm_maxpool2d_readdata),
      .avm_lm_maxpool2d_readdatavalid(avm_lm_maxpool2d_readdatavalid),
      .avm_lm_maxpool2d_burstcount(avm_lm_maxpool2d_burstcount),
      .avm_lm_maxpool2d_writeack(avm_lm_maxpool2d_writeack),
      // AVM avm_unnamed_maxpool2d1_maxpool2d
      .avm_unnamed_maxpool2d1_maxpool2d_enable(avm_unnamed_maxpool2d1_maxpool2d_enable),
      .avm_unnamed_maxpool2d1_maxpool2d_read(avm_unnamed_maxpool2d1_maxpool2d_read),
      .avm_unnamed_maxpool2d1_maxpool2d_write(avm_unnamed_maxpool2d1_maxpool2d_write),
      .avm_unnamed_maxpool2d1_maxpool2d_address(avm_unnamed_maxpool2d1_maxpool2d_address),
      .avm_unnamed_maxpool2d1_maxpool2d_writedata(avm_unnamed_maxpool2d1_maxpool2d_writedata),
      .avm_unnamed_maxpool2d1_maxpool2d_byteenable(avm_unnamed_maxpool2d1_maxpool2d_byteenable),
      .avm_unnamed_maxpool2d1_maxpool2d_waitrequest(avm_unnamed_maxpool2d1_maxpool2d_waitrequest),
      .avm_unnamed_maxpool2d1_maxpool2d_readdata(avm_unnamed_maxpool2d1_maxpool2d_readdata),
      .avm_unnamed_maxpool2d1_maxpool2d_readdatavalid(avm_unnamed_maxpool2d1_maxpool2d_readdatavalid),
      .avm_unnamed_maxpool2d1_maxpool2d_burstcount(avm_unnamed_maxpool2d1_maxpool2d_burstcount),
      .avm_unnamed_maxpool2d1_maxpool2d_writeack(avm_unnamed_maxpool2d1_maxpool2d_writeack)
   );

   assign lmem_invalid_single_bit = 'b0;
endmodule

/////////////////////////////////////////////////////////////////
// MODULE cra_ring_wrapper
/////////////////////////////////////////////////////////////////
module cra_ring_wrapper
(
   input logic clock,
   input logic resetn,
   // AVS cra_ring_root_avs
   input logic cra_ring_root_avs_enable,
   input logic cra_ring_root_avs_read,
   input logic cra_ring_root_avs_write,
   input logic [7:0] cra_ring_root_avs_address,
   input logic [63:0] cra_ring_root_avs_writedata,
   input logic [7:0] cra_ring_root_avs_byteenable,
   output logic cra_ring_root_avs_waitrequest,
   output logic [63:0] cra_ring_root_avs_readdata,
   output logic cra_ring_root_avs_readdatavalid,
   // AVM cra_ring_avm_0
   output logic cra_ring_avm_0_enable,
   output logic cra_ring_avm_0_read,
   output logic cra_ring_avm_0_write,
   output logic [4:0] cra_ring_avm_0_address,
   output logic [63:0] cra_ring_avm_0_writedata,
   output logic [7:0] cra_ring_avm_0_byteenable,
   input logic [63:0] cra_ring_avm_0_readdata,
   input logic cra_ring_avm_0_readdatavalid,
   output logic cra_ring_avm_0_burstcount,
   // AVM cra_ring_avm_1
   output logic cra_ring_avm_1_enable,
   output logic cra_ring_avm_1_read,
   output logic cra_ring_avm_1_write,
   output logic [4:0] cra_ring_avm_1_address,
   output logic [63:0] cra_ring_avm_1_writedata,
   output logic [7:0] cra_ring_avm_1_byteenable,
   input logic [63:0] cra_ring_avm_1_readdata,
   input logic cra_ring_avm_1_readdatavalid,
   output logic cra_ring_avm_1_burstcount,
   // AVM cra_ring_avm_2
   output logic cra_ring_avm_2_enable,
   output logic cra_ring_avm_2_read,
   output logic cra_ring_avm_2_write,
   output logic [4:0] cra_ring_avm_2_address,
   output logic [63:0] cra_ring_avm_2_writedata,
   output logic [7:0] cra_ring_avm_2_byteenable,
   input logic [63:0] cra_ring_avm_2_readdata,
   input logic cra_ring_avm_2_readdatavalid,
   output logic cra_ring_avm_2_burstcount,
   // AVM cra_ring_avm_3
   output logic cra_ring_avm_3_enable,
   output logic cra_ring_avm_3_read,
   output logic cra_ring_avm_3_write,
   output logic [4:0] cra_ring_avm_3_address,
   output logic [63:0] cra_ring_avm_3_writedata,
   output logic [7:0] cra_ring_avm_3_byteenable,
   input logic [63:0] cra_ring_avm_3_readdata,
   input logic cra_ring_avm_3_readdatavalid,
   output logic cra_ring_avm_3_burstcount
);
   logic cra_ring_root_ring_in_wire_read;
   logic cra_ring_root_ring_in_wire_write;
   logic [6:0] cra_ring_root_ring_in_wire_addr;
   logic [63:0] cra_ring_root_ring_in_wire_data;
   logic [7:0] cra_ring_root_ring_in_wire_byteena;
   logic cra_ring_root_ring_in_wire_datavalid;
   logic cra_ring_root_ring_out_wire_read;
   logic cra_ring_root_ring_out_wire_write;
   logic [7:0] cra_ring_root_ring_out_wire_addr;
   logic [63:0] cra_ring_root_ring_out_wire_data;
   logic [7:0] cra_ring_root_ring_out_wire_byteena;
   logic cra_ring_root_ring_out_wire_datavalid;
   logic cra_ring_rom_avm_enable;
   logic cra_ring_rom_avm_read;
   logic cra_ring_rom_avm_write;
   logic [6:0] cra_ring_rom_avm_address;
   logic [63:0] cra_ring_rom_avm_writedata;
   logic [7:0] cra_ring_rom_avm_byteenable;
   logic [63:0] cra_ring_rom_avm_readdata;
   logic cra_ring_rom_avm_readdatavalid;
   logic cra_ring_rom_avm_burstcount;
   logic cra_ring_rom_ring_out_wire_read;
   logic cra_ring_rom_ring_out_wire_write;
   logic [6:0] cra_ring_rom_ring_out_wire_addr;
   logic [63:0] cra_ring_rom_ring_out_wire_data;
   logic [7:0] cra_ring_rom_ring_out_wire_byteena;
   logic cra_ring_rom_ring_out_wire_datavalid;
   logic cra_ring_node_ring_out_wire_0_read;
   logic cra_ring_node_ring_out_wire_0_write;
   logic [6:0] cra_ring_node_ring_out_wire_0_addr;
   logic [63:0] cra_ring_node_ring_out_wire_0_data;
   logic [7:0] cra_ring_node_ring_out_wire_0_byteena;
   logic cra_ring_node_ring_out_wire_0_datavalid;
   logic cra_ring_node_ring_out_wire_1_read;
   logic cra_ring_node_ring_out_wire_1_write;
   logic [6:0] cra_ring_node_ring_out_wire_1_addr;
   logic [63:0] cra_ring_node_ring_out_wire_1_data;
   logic [7:0] cra_ring_node_ring_out_wire_1_byteena;
   logic cra_ring_node_ring_out_wire_1_datavalid;
   logic cra_ring_node_ring_out_wire_2_read;
   logic cra_ring_node_ring_out_wire_2_write;
   logic [6:0] cra_ring_node_ring_out_wire_2_addr;
   logic [63:0] cra_ring_node_ring_out_wire_2_data;
   logic [7:0] cra_ring_node_ring_out_wire_2_byteena;
   logic cra_ring_node_ring_out_wire_2_datavalid;
   logic cra_ring_node_ring_out_wire_3_read;
   logic cra_ring_node_ring_out_wire_3_write;
   logic [6:0] cra_ring_node_ring_out_wire_3_addr;
   logic [63:0] cra_ring_node_ring_out_wire_3_data;
   logic [7:0] cra_ring_node_ring_out_wire_3_byteena;
   logic cra_ring_node_ring_out_wire_3_datavalid;

   // INST cra_root of cra_ring_root
   cra_ring_root
   #(
      .ADDR_W(5),
      .ALLOW_HIGH_SPEED_FIFO_USAGE(0),
      .ASYNC_RESET(1),
      .DATA_W(64),
      .ID_W(2),
      .ROM_ENABLE(1),
      .ROM_EXT_W(0),
      .SLAVE_PORT_WAITREQUEST_ALLOWANCE(0),
      .SYNCHRONIZE_RESET(0)
   )
   cra_root
   (
      // AVS avs
      .avs_enable(cra_ring_root_avs_enable),
      .avs_read(cra_ring_root_avs_read),
      .avs_write(cra_ring_root_avs_write),
      .avs_addr(cra_ring_root_avs_address),
      .avs_writedata(cra_ring_root_avs_writedata),
      .avs_byteena(cra_ring_root_avs_byteenable),
      .avs_waitrequest(cra_ring_root_avs_waitrequest),
      .avs_readdata(cra_ring_root_avs_readdata),
      .avs_readdatavalid(cra_ring_root_avs_readdatavalid),
      // AVS ri
      .ri_read(cra_ring_node_ring_out_wire_3_read),
      .ri_write(cra_ring_node_ring_out_wire_3_write),
      .ri_addr(cra_ring_node_ring_out_wire_3_addr),
      .ri_data(cra_ring_node_ring_out_wire_3_data),
      .ri_byteena(cra_ring_node_ring_out_wire_3_byteena),
      .ri_datavalid(cra_ring_node_ring_out_wire_3_datavalid),
      // AVS ro
      .ro_read(cra_ring_root_ring_out_wire_read),
      .ro_write(cra_ring_root_ring_out_wire_write),
      .ro_addr(cra_ring_root_ring_out_wire_addr),
      .ro_data(cra_ring_root_ring_out_wire_data),
      .ro_byteena(cra_ring_root_ring_out_wire_byteena),
      .ro_datavalid(cra_ring_root_ring_out_wire_datavalid),
      .clk(clock),
      .rst_n(resetn)
   );

   // INST cra_ring_rom of cra_ring_rom
   cra_ring_rom
   #(
      .ASYNC_RESET(1),
      .DATA_W(64),
      .ID_W(2),
      .RING_ADDR_W(5),
      .ROM_EXT_W(0),
      .ROM_W(7),
      .SYNCHRONIZE_RESET(0)
   )
   cra_ring_rom
   (
      // AVM avm
      .avm_enable(cra_ring_rom_avm_enable),
      .avm_read(cra_ring_rom_avm_read),
      .avm_write(cra_ring_rom_avm_write),
      .avm_addr(cra_ring_rom_avm_address),
      .avm_writedata(cra_ring_rom_avm_writedata),
      .avm_byteenable(cra_ring_rom_avm_byteenable),
      .avm_readdata(cra_ring_rom_avm_readdata),
      .avm_readdatavalid(cra_ring_rom_avm_readdatavalid),
      .avm_burstcount(cra_ring_rom_avm_burstcount),
      // AVS ri
      .ri_read(cra_ring_root_ring_out_wire_read),
      .ri_write(cra_ring_root_ring_out_wire_write),
      .ri_addr(cra_ring_root_ring_out_wire_addr),
      .ri_data(cra_ring_root_ring_out_wire_data),
      .ri_byteena(cra_ring_root_ring_out_wire_byteena),
      .ri_datavalid(cra_ring_root_ring_out_wire_datavalid),
      // AVS ro
      .ro_read(cra_ring_rom_ring_out_wire_read),
      .ro_write(cra_ring_rom_ring_out_wire_write),
      .ro_addr(cra_ring_rom_ring_out_wire_addr),
      .ro_data(cra_ring_rom_ring_out_wire_data),
      .ro_byteena(cra_ring_rom_ring_out_wire_byteena),
      .ro_datavalid(cra_ring_rom_ring_out_wire_datavalid),
      .clk(clock),
      .rst_n(resetn)
   );

   // INST cra_ring_node_avm_wire_0_cra_ring_inst_0 of cra_ring_node
   cra_ring_node
   #(
      .ASYNC_RESET(1),
      .CRA_ADDR_W(5),
      .DATA_W(64),
      .ID(0),
      .ID_W(2),
      .RING_ADDR_W(5),
      .SYNCHRONIZE_RESET(0)
   )
   cra_ring_node_avm_wire_0_cra_ring_inst_0
   (
      // AVM avm
      .avm_enable(cra_ring_avm_0_enable),
      .avm_read(cra_ring_avm_0_read),
      .avm_write(cra_ring_avm_0_write),
      .avm_addr(cra_ring_avm_0_address),
      .avm_writedata(cra_ring_avm_0_writedata),
      .avm_byteena(cra_ring_avm_0_byteenable),
      .avm_readdata(cra_ring_avm_0_readdata),
      .avm_readdatavalid(cra_ring_avm_0_readdatavalid),
      .avm_burstcount(cra_ring_avm_0_burstcount),
      // AVS ri
      .ri_read(cra_ring_rom_ring_out_wire_read),
      .ri_write(cra_ring_rom_ring_out_wire_write),
      .ri_addr(cra_ring_rom_ring_out_wire_addr),
      .ri_data(cra_ring_rom_ring_out_wire_data),
      .ri_byteena(cra_ring_rom_ring_out_wire_byteena),
      .ri_datavalid(cra_ring_rom_ring_out_wire_datavalid),
      // AVS ro
      .ro_read(cra_ring_node_ring_out_wire_0_read),
      .ro_write(cra_ring_node_ring_out_wire_0_write),
      .ro_addr(cra_ring_node_ring_out_wire_0_addr),
      .ro_data(cra_ring_node_ring_out_wire_0_data),
      .ro_byteena(cra_ring_node_ring_out_wire_0_byteena),
      .ro_datavalid(cra_ring_node_ring_out_wire_0_datavalid),
      .clk(clock),
      .rst_n(resetn)
   );

   // INST cra_ring_node_avm_wire_1_cra_ring_inst_1 of cra_ring_node
   cra_ring_node
   #(
      .ASYNC_RESET(1),
      .CRA_ADDR_W(5),
      .DATA_W(64),
      .ID(1),
      .ID_W(2),
      .RING_ADDR_W(5),
      .SYNCHRONIZE_RESET(0)
   )
   cra_ring_node_avm_wire_1_cra_ring_inst_1
   (
      // AVM avm
      .avm_enable(cra_ring_avm_1_enable),
      .avm_read(cra_ring_avm_1_read),
      .avm_write(cra_ring_avm_1_write),
      .avm_addr(cra_ring_avm_1_address),
      .avm_writedata(cra_ring_avm_1_writedata),
      .avm_byteena(cra_ring_avm_1_byteenable),
      .avm_readdata(cra_ring_avm_1_readdata),
      .avm_readdatavalid(cra_ring_avm_1_readdatavalid),
      .avm_burstcount(cra_ring_avm_1_burstcount),
      // AVS ri
      .ri_read(cra_ring_node_ring_out_wire_0_read),
      .ri_write(cra_ring_node_ring_out_wire_0_write),
      .ri_addr(cra_ring_node_ring_out_wire_0_addr),
      .ri_data(cra_ring_node_ring_out_wire_0_data),
      .ri_byteena(cra_ring_node_ring_out_wire_0_byteena),
      .ri_datavalid(cra_ring_node_ring_out_wire_0_datavalid),
      // AVS ro
      .ro_read(cra_ring_node_ring_out_wire_1_read),
      .ro_write(cra_ring_node_ring_out_wire_1_write),
      .ro_addr(cra_ring_node_ring_out_wire_1_addr),
      .ro_data(cra_ring_node_ring_out_wire_1_data),
      .ro_byteena(cra_ring_node_ring_out_wire_1_byteena),
      .ro_datavalid(cra_ring_node_ring_out_wire_1_datavalid),
      .clk(clock),
      .rst_n(resetn)
   );

   // INST cra_ring_node_avm_wire_2_cra_ring_inst_2 of cra_ring_node
   cra_ring_node
   #(
      .ASYNC_RESET(1),
      .CRA_ADDR_W(5),
      .DATA_W(64),
      .ID(2),
      .ID_W(2),
      .RING_ADDR_W(5),
      .SYNCHRONIZE_RESET(0)
   )
   cra_ring_node_avm_wire_2_cra_ring_inst_2
   (
      // AVM avm
      .avm_enable(cra_ring_avm_2_enable),
      .avm_read(cra_ring_avm_2_read),
      .avm_write(cra_ring_avm_2_write),
      .avm_addr(cra_ring_avm_2_address),
      .avm_writedata(cra_ring_avm_2_writedata),
      .avm_byteena(cra_ring_avm_2_byteenable),
      .avm_readdata(cra_ring_avm_2_readdata),
      .avm_readdatavalid(cra_ring_avm_2_readdatavalid),
      .avm_burstcount(cra_ring_avm_2_burstcount),
      // AVS ri
      .ri_read(cra_ring_node_ring_out_wire_1_read),
      .ri_write(cra_ring_node_ring_out_wire_1_write),
      .ri_addr(cra_ring_node_ring_out_wire_1_addr),
      .ri_data(cra_ring_node_ring_out_wire_1_data),
      .ri_byteena(cra_ring_node_ring_out_wire_1_byteena),
      .ri_datavalid(cra_ring_node_ring_out_wire_1_datavalid),
      // AVS ro
      .ro_read(cra_ring_node_ring_out_wire_2_read),
      .ro_write(cra_ring_node_ring_out_wire_2_write),
      .ro_addr(cra_ring_node_ring_out_wire_2_addr),
      .ro_data(cra_ring_node_ring_out_wire_2_data),
      .ro_byteena(cra_ring_node_ring_out_wire_2_byteena),
      .ro_datavalid(cra_ring_node_ring_out_wire_2_datavalid),
      .clk(clock),
      .rst_n(resetn)
   );

   // INST cra_ring_node_avm_wire_3_cra_ring_inst_3 of cra_ring_node
   cra_ring_node
   #(
      .ASYNC_RESET(1),
      .CRA_ADDR_W(5),
      .DATA_W(64),
      .ID(3),
      .ID_W(2),
      .RING_ADDR_W(5),
      .SYNCHRONIZE_RESET(0)
   )
   cra_ring_node_avm_wire_3_cra_ring_inst_3
   (
      // AVM avm
      .avm_enable(cra_ring_avm_3_enable),
      .avm_read(cra_ring_avm_3_read),
      .avm_write(cra_ring_avm_3_write),
      .avm_addr(cra_ring_avm_3_address),
      .avm_writedata(cra_ring_avm_3_writedata),
      .avm_byteena(cra_ring_avm_3_byteenable),
      .avm_readdata(cra_ring_avm_3_readdata),
      .avm_readdatavalid(cra_ring_avm_3_readdatavalid),
      .avm_burstcount(cra_ring_avm_3_burstcount),
      // AVS ri
      .ri_read(cra_ring_node_ring_out_wire_2_read),
      .ri_write(cra_ring_node_ring_out_wire_2_write),
      .ri_addr(cra_ring_node_ring_out_wire_2_addr),
      .ri_data(cra_ring_node_ring_out_wire_2_data),
      .ri_byteena(cra_ring_node_ring_out_wire_2_byteena),
      .ri_datavalid(cra_ring_node_ring_out_wire_2_datavalid),
      // AVS ro
      .ro_read(cra_ring_node_ring_out_wire_3_read),
      .ro_write(cra_ring_node_ring_out_wire_3_write),
      .ro_addr(cra_ring_node_ring_out_wire_3_addr),
      .ro_data(cra_ring_node_ring_out_wire_3_data),
      .ro_byteena(cra_ring_node_ring_out_wire_3_byteena),
      .ro_datavalid(cra_ring_node_ring_out_wire_3_datavalid),
      .clk(clock),
      .rst_n(resetn)
   );

   // INST sys_description_rom of acl_rom_module
   acl_rom_module
   #(
      .ADDRESS_WIDTH(7),
      .ASYNC_RESET(1),
      .DATA_WIDTH(64),
      .FAMILY("Arria 10"),
      .INIT_FILE("sys_description.hex"),
      .SYNCHRONIZE_RESET(0)
   )
   sys_description_rom
   (
      .clk(clock),
      .rst_n(resetn),
      .read(cra_ring_rom_avm_read),
      .readdatavalid(cra_ring_rom_avm_readdatavalid),
      .address(cra_ring_rom_avm_address),
      .readdata(cra_ring_rom_avm_readdata)
   );

endmodule

